{
  "0xfe4f42337e2401e210262e6913983e796c7b62b0e0465ef0fdd83dd79caeb71e": {
    "name": "Staking",
    "deployment": {
      "_format": "hh-sol-artifact-1",
      "contractName": "Staking",
      "sourceName": "contracts/Staking.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "chn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_autoCompoundingFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "toAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "AutoCompounding",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldFee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newFee",
              "type": "uint256"
            }
          ],
          "name": "ChangeAutoCompoundingFee",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minimumStakeAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardPerBlock",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minimumWithdraw",
              "type": "uint256"
            }
          ],
          "name": "ChangeStakingPoolSetting",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "toAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Claim",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "DepositRewardPool",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "toAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "EmergencyWithdraw",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldValue",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newValue",
              "type": "address"
            }
          ],
          "name": "GuardianUpdate",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "authorizedAddress",
              "type": "address"
            }
          ],
          "name": "GuardianshipTransferAuthorization",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "oldValue",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256"
            }
          ],
          "name": "MinimumStakeAmountUpdate",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minimumStakeAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardPerBlock",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenStake",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "minimumWithdraw",
              "type": "uint256"
            }
          ],
          "name": "PoolCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "toAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "RewardFromEmergencyWithdraw",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            }
          ],
          "name": "Stake",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "toAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "toAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "WithdrawRewardPool",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "PERCENT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "REWARD_SCALE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minimumStakeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rewardPerBlock",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenStake",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minimumWithdraw",
              "type": "uint256"
            }
          ],
          "name": "addNewStakingPool",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "autoCompoundingFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            }
          ],
          "name": "autoCoumpound",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "rewardPerBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "diffBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeAmount",
              "type": "uint256"
            }
          ],
          "name": "calculateReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fee",
              "type": "uint256"
            }
          ],
          "name": "changeAutoCompoundingFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "claimAllReward",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            }
          ],
          "name": "claimReward",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "claimedByUser",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            }
          ],
          "name": "emergencyWithdraw",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "name": "getAllAmountReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "name": "getAmountRewardInPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getBlockNumber",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            }
          ],
          "name": "getCoumpoundingReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            }
          ],
          "name": "getPoolInfoFromId",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "totalStaked",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumStakeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardPerBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenStake",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumWithdraw",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StakingStorage.LinearPoolInfo",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "name": "getPriorStakedAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "name": "getStakedAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "hasUserInPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "linearPoolInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumStakeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rewardPerBlock",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenStake",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minimumWithdraw",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "listUserInPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "rewardAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newToken",
              "type": "address"
            }
          ],
          "name": "setNewRewardToken",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumStakeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rewardPerBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumWithdraw",
              "type": "uint256"
            }
          ],
          "name": "setStakingPool",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "stake",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "stakedMap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "stakedMapIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "totalClaimForLatestStakeBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "withdraw",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "bytecode": "",
      "deployedBytecode": "",
      "linkReferences": {},
      "deployedLinkReferences": {},
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdraw(uint256,uint256)": {
            "params": {
              "amount": "The amount to withdraw"
            }
          }
        },
        "title": "Staking Contract",
        "version": 1
      },
      "evm": {
        "bytecode": {
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:387:13",
                "statements": [
                  {
                    "nodeType": "YulBlock",
                    "src": "6:3:13",
                    "statements": []
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "112:273:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "158:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "167:6:13"
                                    },
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "175:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "160:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "160:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "160:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "133:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "142:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "129:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "129:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "154:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "125:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "125:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "122:2:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "193:29:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "212:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "206:5:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "206:16:13"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "197:5:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "285:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "294:6:13"
                                    },
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "302:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "287:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "287:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "287:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "244:5:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "255:5:13"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "270:3:13",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "275:1:13",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "266:3:13"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "266:11:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "279:1:13",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "262:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "262:19:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "251:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "251:31:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:42:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "234:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:50:13"
                          },
                          "nodeType": "YulIf",
                          "src": "231:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "320:15:13",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "330:5:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "320:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "344:35:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "364:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "375:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "360:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "360:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "354:5:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "354:25:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "344:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "70:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "81:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "93:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "101:6:13",
                        "type": ""
                      }
                    ],
                    "src": "14:371:13"
                  }
                ]
              },
              "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n}",
              "id": 13,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "linkReferences": {},
          "object": "",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3A5E CODESIZE SUB DUP1 PUSH3 0x3A5E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0xC8 JUMP JUMPDEST PUSH3 0x48 PUSH3 0x42 PUSH3 0x72 JUMP JUMPDEST PUSH3 0x76 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 SSTORE PUSH3 0x102 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xDB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xF2 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH2 0x394C DUP1 PUSH3 0x112 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xD5E35184 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xED28EA05 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xED28EA05 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0xFE968E5F EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0xFEC00370 EQ PUSH2 0x5CF JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0xD5E35184 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xDBEA1B9E EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xE17BE67D EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xEA4338AE EQ PUSH2 0x54F JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0xB110EE3F GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB110EE3F EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0xB85A8B20 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0xB8E94B63 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xC3812F15 EQ PUSH2 0x4BB JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xA8989EED EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xA8E62B97 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x451 JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x82A4C881 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x82A4C881 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x890334A2 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x8A623D86 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x8CF57CB9 EQ PUSH2 0x3DA JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x71A1372D EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x365 JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0x3A71EDE8 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x3A71EDE8 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x42CBB15C EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x52A64155 EQ PUSH2 0x2F0 JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0x1A5DC445 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x2608D9BC EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x284570BB EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x34D38DAD EQ PUSH2 0x27B JUMPI PUSH2 0x1F1 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x5EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x31CC JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x3769 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x3719 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x324C JUMP JUMPDEST PUSH2 0xA65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x31CC JUMP JUMPDEST PUSH2 0xC69 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0xD1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x322B JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x31CC JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x1559 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x1AF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x3151 JUMP JUMPDEST PUSH2 0x1B76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x322B JUMP JUMPDEST PUSH2 0x1BBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x1E66 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x20A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x215F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH2 0x232F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x32E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH2 0x234B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x32B3 JUMP JUMPDEST PUSH2 0x2367 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x44C CALLDATASIZE PUSH1 0x4 PUSH2 0x3288 JUMP JUMPDEST PUSH2 0x24CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x46C CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x24EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x2544 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x254A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3151 JUMP JUMPDEST PUSH2 0x2550 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x322B JUMP JUMPDEST PUSH2 0x260A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FB PUSH2 0x4F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x264F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52C PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x31F7 JUMP JUMPDEST PUSH2 0x26A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP3 SWAP2 SWAP1 PUSH2 0x3772 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x26D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x56A CALLDATASIZE PUSH1 0x4 PUSH2 0x31F7 JUMP JUMPDEST PUSH2 0x26DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x58A CALLDATASIZE PUSH1 0x4 PUSH2 0x31CC JUMP JUMPDEST PUSH2 0x283A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x5AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3151 JUMP JUMPDEST PUSH2 0x2857 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x5CA CALLDATASIZE PUSH1 0x4 PUSH2 0x31CC JUMP JUMPDEST PUSH2 0x2923 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x5EA CALLDATASIZE PUSH1 0x4 PUSH2 0x316B JUMP JUMPDEST PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x62B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE SWAP3 SLOAD SWAP2 SWAP4 POP SWAP2 AND EQ PUSH2 0x6D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x34CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x718 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x796 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x7AC DUP8 DUP4 PUSH2 0x295D JUMP JUMPDEST SWAP1 POP PUSH2 0x7D9 PUSH2 0x7D2 PUSH2 0x2710 PUSH2 0x7CC PUSH1 0x1 SLOAD DUP6 PUSH2 0x2AD8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2B3E JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x2B80 JUMP JUMPDEST SWAP4 POP PUSH2 0x806 DUP8 PUSH2 0x800 PUSH2 0x7F9 PUSH1 0x1 SLOAD PUSH2 0x2710 PUSH2 0x2BC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST DUP5 PUSH2 0x2C0B JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x813 SWAP1 PUSH2 0x38AE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x752 JUMP JUMPDEST POP DUP3 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85B SWAP3 SWAP2 SWAP1 PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x889 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x8E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0xD7A74A496A9638B7ABA0FDAD068CBE4C42734A070B90880147304FDD2AB62FFF SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP GT DUP1 ISZERO PUSH2 0x92B JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH2 0x96B DUP5 DUP5 PUSH2 0x295D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x97B PUSH2 0x30E8 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 SWAP1 DUP2 LT DUP1 ISZERO PUSH2 0x98C JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x9C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9FC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6D PUSH2 0x2DA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA8B PUSH2 0x234B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x363F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 DUP2 MSTORE SWAP3 DUP3 ADD DUP7 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP6 ADD DUP8 DUP2 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP7 DUP3 SWAP1 MSTORE SWAP7 MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 PUSH1 0x5 SWAP1 SWAP9 MUL SWAP8 DUP9 ADD SSTORE SWAP7 MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE4 DUP8 ADD SSTORE SWAP3 MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE5 DUP7 ADD SSTORE MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE6 DUP6 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE7 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SLOAD PUSH32 0xC659FD886ACDCE2AD3A8FEC0EBA18974CBBCEBE2D76037390DD629833F76C67B SWAP2 PUSH2 0xC46 SWAP2 PUSH2 0x3862 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC5B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP GT DUP1 ISZERO PUSH2 0xC7E JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND DUP1 DUP5 MSTORE SWAP4 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP5 DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP4 DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 ADD DUP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST NUMBER SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 SWAP1 DUP2 LT DUP1 ISZERO PUSH2 0xD33 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xDA5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 NUMBER SWAP1 POP PUSH1 0x0 CALLER SWAP1 POP DUP3 PUSH1 0x4 ADD SLOAD DUP6 LT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP11 DUP6 MSTORE PUSH1 0x4 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP2 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 DUP8 GT DUP1 ISZERO SWAP1 PUSH2 0xE71 JUMPI POP PUSH1 0x0 DUP8 GT JUMPDEST PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3506 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB3 DUP10 DUP6 PUSH2 0x295D JUMP JUMPDEST SWAP1 POP PUSH2 0xEC6 DUP10 DUP8 PUSH1 0x2 ADD SLOAD DUP5 DUP9 DUP9 PUSH2 0x2DAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0xED8 SWAP1 DUP11 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xF16 SWAP1 PUSH1 0x1 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0x0 EQ DUP1 ISZERO PUSH2 0x1086 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP14 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x12B5 JUMPI PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP13 SWAP3 SWAP2 SWAP1 PUSH2 0x10AB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3862 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x10E2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP8 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP2 DUP4 KECCAK256 SLOAD SWAP2 AND SWAP3 POP SWAP1 PUSH2 0x112D DUP3 PUSH1 0x1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP DUP5 SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x1179 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x11D2 DUP2 PUSH1 0x1 PUSH2 0x2B80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP11 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP3 DUP14 AND DUP3 MSTORE DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP8 DUP3 MSTORE DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1258 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP POP JUMPDEST DUP7 SLOAD PUSH2 0x12C1 SWAP1 DUP11 PUSH2 0x2BC9 JUMP JUMPDEST DUP8 SSTORE DUP2 ISZERO PUSH2 0x13FF JUMPI PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x1303 SWAP1 DUP4 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP12 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 SLOAD SWAP2 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1377 SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C9 SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x13FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x33CD JUMP JUMPDEST PUSH1 0x3 DUP8 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1459 SWAP1 DUP9 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1487 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14AB SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x14E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3498 JUMP JUMPDEST DUP9 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1528 SWAP2 SWAP1 PUSH2 0x3769 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 SWAP1 DUP2 LT DUP1 ISZERO PUSH2 0x156A JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x15A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15DC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x5 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 CALLER DUP1 DUP9 MSTORE SWAP1 DUP6 MSTORE DUP2 DUP8 KECCAK256 SLOAD DUP11 DUP9 MSTORE PUSH1 0x4 DUP7 MSTORE DUP3 DUP9 KECCAK256 DUP3 DUP10 MSTORE DUP7 MSTORE DUP3 DUP9 KECCAK256 DUP2 DUP10 MSTORE DUP7 MSTORE SWAP7 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP5 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD SWAP5 POP SWAP3 NUMBER SWAP3 SWAP1 SWAP2 PUSH2 0x1673 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x36AB JUMP JUMPDEST PUSH2 0x1684 DUP8 DUP7 PUSH1 0x2 ADD SLOAD DUP4 DUP7 DUP9 PUSH2 0x2DAB JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x16BF SWAP1 PUSH1 0x1 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP9 DUP2 MSTORE DUP1 DUP5 ADD DUP6 DUP2 MSTORE DUP14 DUP7 MSTORE PUSH1 0x4 DUP6 MSTORE DUP4 DUP7 KECCAK256 SWAP3 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 DUP6 MSTORE SWAP5 DUP4 MSTORE SWAP3 KECCAK256 SWAP3 MLOAD DUP4 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP2 ADD MLOAD DUP6 SLOAD PUSH2 0x173B SWAP2 PUSH2 0x2BC9 JUMP JUMPDEST DUP6 SSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP12 DUP6 MSTORE PUSH1 0x2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP2 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SSTORE PUSH1 0x7 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x19C2 JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP10 SWAP3 SWAP2 SWAP1 PUSH2 0x17B8 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3862 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x17EF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 DUP2 AND DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP8 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP2 DUP4 KECCAK256 SLOAD SWAP2 AND SWAP3 POP SWAP1 PUSH2 0x183A DUP3 PUSH1 0x1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP DUP5 SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x1886 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x18DF DUP2 PUSH1 0x1 PUSH2 0x2B80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP11 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP3 DUP13 AND DUP3 MSTORE DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP8 DUP3 MSTORE DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1965 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP POP JUMPDEST PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x1A20 SWAP2 DUP9 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A4E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A72 SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x1AA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1AFF PUSH2 0x2DA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B1D PUSH2 0x234B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x363F JUMP JUMPDEST PUSH2 0x1B74 PUSH1 0x0 PUSH2 0x2E48 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1BB4 JUMPI PUSH1 0x0 PUSH2 0x1B92 DUP3 DUP7 PUSH2 0x295D JUMP JUMPDEST SWAP1 POP PUSH2 0x1B9E DUP4 DUP3 PUSH2 0x2B80 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x1BAC SWAP1 PUSH2 0x38AE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B7C JUMP JUMPDEST POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 SWAP1 DUP2 LT DUP1 ISZERO PUSH2 0x1BCE JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1C04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C40 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP2 POP DUP4 LT ISZERO PUSH2 0x1CDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x35AB JUMP JUMPDEST PUSH2 0x1CE7 DUP5 DUP5 CALLER PUSH2 0x2C0B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x1D68 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE DUP2 DUP6 MSTORE DUP4 DUP6 KECCAK256 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SLOAD SWAP1 DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP9 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3305 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DFB SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x1E31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP GT DUP1 ISZERO PUSH2 0x1E7B JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1EB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1EED JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE SWAP3 SLOAD SWAP2 SWAP4 POP SWAP2 AND EQ PUSH2 0x1F8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x34CF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1FFC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FD1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x209C JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x204F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2065 DUP10 DUP4 PUSH2 0x295D JUMP JUMPDEST SWAP1 POP PUSH2 0x2085 PUSH2 0x7D2 PUSH2 0x2710 PUSH2 0x7CC PUSH1 0x1 SLOAD DUP6 PUSH2 0x2AD8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP DUP1 DUP1 PUSH2 0x2094 SWAP1 PUSH2 0x38AE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x200B JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20AE PUSH2 0x2DA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20CC PUSH2 0x234B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2119 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x363F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0A8DFD34A5EF93467EDA4DE789AC188BBB113709EC12C60F9211D0103DB6F24 SWAP1 PUSH2 0x2153 SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH2 0x3772 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0x0 PUSH2 0x217A DUP3 DUP6 PUSH2 0x295D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x21B7 SWAP1 DUP3 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x21F1 DUP4 DUP3 PUSH2 0x2B80 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x21FF SWAP1 PUSH2 0x38AE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2164 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x2260 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x227A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x228E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22B2 SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x22E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x36E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x236F PUSH2 0x2DA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x238D PUSH2 0x234B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x363F JUMP JUMPDEST PUSH1 0x8 SLOAD DUP5 SWAP1 DUP2 LT DUP1 ISZERO PUSH2 0x23EB JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x2421 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x245D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP5 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x1B3E62B6D2FA55EB5B813D4DD3EB7D2F61816237402204DA451BE5175DCEB67F DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x24BD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96B PUSH8 0xDE0B6B3A7640000 PUSH2 0x7CC DUP5 PUSH2 0x24E9 DUP9 DUP9 PUSH2 0x2AD8 JUMP JUMPDEST SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 SWAP1 DUP2 LT DUP1 ISZERO PUSH2 0x2500 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x2536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH2 0x2540 DUP3 CALLER PUSH2 0x2EBF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x2558 PUSH2 0x2DA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2576 PUSH2 0x234B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x363F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x265F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP GT DUP1 ISZERO PUSH2 0x26F4 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x272A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST DUP3 PUSH2 0x2740 JUMPI PUSH2 0x2739 DUP6 DUP6 PUSH2 0xC69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2832 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP10 DUP6 MSTORE PUSH1 0x4 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP2 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 JUMPDEST DUP1 ISZERO PUSH2 0x282A JUMPI PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 LT PUSH2 0x2817 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x2832 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 PUSH2 0x2822 DUP2 PUSH2 0x3879 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27AA JUMP JUMPDEST POP PUSH1 0x0 SWAP4 POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x285F PUSH2 0x2DA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x287D PUSH2 0x234B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x363F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x343B JUMP JUMPDEST PUSH2 0x2920 DUP2 PUSH2 0x2E48 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x299A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP5 DUP6 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 SWAP3 DUP4 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE DUP12 DUP9 MSTORE SWAP6 DUP6 MSTORE DUP3 DUP8 KECCAK256 SWAP6 DUP11 AND DUP1 DUP9 MSTORE SWAP6 DUP6 MSTORE DUP3 DUP8 KECCAK256 SLOAD DUP12 DUP9 MSTORE SWAP2 DUP6 MSTORE DUP3 DUP8 KECCAK256 SWAP6 DUP8 MSTORE SWAP5 DUP5 MSTORE DUP2 DUP7 KECCAK256 DUP2 DUP8 MSTORE DUP5 MSTORE DUP2 DUP7 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE SWAP6 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 NUMBER SWAP2 SWAP1 PUSH2 0x2A56 SWAP1 DUP4 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A6D DUP7 PUSH1 0x40 ADD MLOAD DUP4 DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP15 DUP6 MSTORE PUSH1 0x3 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP2 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x2AC9 SWAP2 PUSH2 0x2AC3 SWAP1 DUP5 PUSH2 0x2B80 JUMP JUMPDEST SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2AE7 JUMPI POP PUSH1 0x0 PUSH2 0x2AD2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF3 DUP4 DUP6 PUSH2 0x3825 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x2B00 DUP6 DUP4 PUSH2 0x37EC JUMP JUMPDEST EQ PUSH2 0x2B37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x35E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B37 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x304C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B8D DUP4 DUP6 PUSH2 0x37D4 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2B37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x353D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B37 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E20756E646572666C6F7700 DUP2 MSTORE POP PUSH2 0x309D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2C47 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x5 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP1 DUP9 MSTORE SWAP1 DUP6 MSTORE DUP2 DUP8 KECCAK256 SLOAD DUP12 DUP9 MSTORE PUSH1 0x4 DUP7 MSTORE DUP3 DUP9 KECCAK256 SWAP2 DUP9 MSTORE SWAP1 DUP6 MSTORE DUP2 DUP8 KECCAK256 DUP2 DUP9 MSTORE DUP6 MSTORE SWAP6 DUP2 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD PUSH1 0x2 DUP2 ADD SLOAD DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 DUP6 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP5 POP NUMBER SWAP4 SWAP3 SWAP2 PUSH2 0x2CD3 SWAP2 DUP10 SWAP2 SWAP1 DUP7 DUP10 PUSH2 0x2DAB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2CE5 SWAP1 DUP9 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2D23 SWAP1 PUSH1 0x1 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP10 DUP2 MSTORE DUP1 DUP5 ADD DUP8 DUP2 MSTORE DUP15 DUP7 MSTORE PUSH1 0x4 DUP6 MSTORE DUP4 DUP7 KECCAK256 SWAP3 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 DUP6 MSTORE SWAP5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP2 MLOAD DUP3 SSTORE MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE DUP5 SLOAD PUSH2 0x2D9B SWAP1 DUP9 PUSH2 0x2B80 JUMP JUMPDEST SWAP1 SWAP5 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x2DBB SWAP1 DUP5 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2DCE DUP7 DUP4 DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2E0B SWAP1 DUP3 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 SWAP8 DUP9 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP7 AND DUP11 MSTORE SWAP5 SWAP1 MSTORE SWAP3 SWAP1 SWAP7 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ECB DUP4 DUP4 PUSH2 0x295D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2F08 SWAP1 DUP3 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 SLOAD SWAP2 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x2F7C SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FCE SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x3004 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x36E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3087 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3094 DUP5 DUP7 PUSH2 0x37EC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x30DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3094 DUP5 DUP7 PUSH2 0x3862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1BB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3162 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2B37 DUP3 PUSH2 0x312D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x317D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3186 DUP4 PUSH2 0x312D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31A5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2B37 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31C5 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31DE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x31EE PUSH1 0x20 DUP5 ADD PUSH2 0x312D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x320B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x321B PUSH1 0x20 DUP6 ADD PUSH2 0x312D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x323D JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3261 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x3278 PUSH1 0x40 DUP7 ADD PUSH2 0x312D JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x329C JUMPI DUP3 DUP4 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x32C8 JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3388 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x336C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3399 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x47657420726577617264206661696C6564000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B65206661696C65640000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x506F6F6C206E6F742076616C6964000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH32 0x4175746F436F6D706F756E64696E67206661696C656400000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6F20736D616C6C20616D6F756E7400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x706964206E6F742076616C696400000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F742076616C696420616D6F756E7400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH32 0x436C61696D206661696C65640000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x60 DUP5 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x37E7 JUMPI PUSH2 0x37E7 PUSH2 0x38E7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3820 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x385D JUMPI PUSH2 0x385D PUSH2 0x38E7 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3874 JUMPI PUSH2 0x3874 PUSH2 0x38E7 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3888 JUMPI PUSH2 0x3888 PUSH2 0x38E7 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x38E0 JUMPI PUSH2 0x38E0 PUSH2 0x38E7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 SELFBALANCE 0xB8 0x26 PUSH24 0xC139B025D0A3E0974567A0EF7824642D13ACD210315B721E SWAP7 SUB 0xE PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
          "sourceMap": "220:14155:8:-:0;;;317:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;:12::i;:::-;921:18;:32::i;:::-;391:13:8::1;:19:::0;;-1:-1:-1;;;;;;391:19:8::1;-1:-1:-1::0;;;;;391:19:8;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;420:40:8;220:14155;;640:96:4;719:10;640:96;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;14:371:13:-;;;154:2;142:9;133:7;129:23;125:32;122:2;;;175:6;167;160:22;122:2;206:16;;-1:-1:-1;;;;;251:31:13;;241:42;;231:2;;302:6;294;287:22;231:2;375;360:18;;;;354:25;330:5;;354:25;;-1:-1:-1;;;112:273:13:o;:::-;220:14155:8;;;;;;"
        },
        "deployedBytecode": {
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:13035:13",
                "statements": [
                  {
                    "nodeType": "YulBlock",
                    "src": "6:3:13",
                    "statements": []
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "65:147:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "75:29:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "97:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "84:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "84:20:13"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "75:5:13"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "190:16:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "199:1:13",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "202:1:13",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "192:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "192:12:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "192:12:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "126:5:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "137:5:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "144:42:13",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "133:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "133:54:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "123:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "123:65:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "116:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "116:73:13"
                          },
                          "nodeType": "YulIf",
                          "src": "113:2:13"
                        }
                      ]
                    },
                    "name": "abi_decode_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "44:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "55:5:13",
                        "type": ""
                      }
                    ],
                    "src": "14:198:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "287:128:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "333:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "342:6:13"
                                    },
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "350:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "335:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "335:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "335:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "308:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "317:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "304:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "304:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "329:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "300:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "300:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "297:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "368:41:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "399:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "378:20:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "378:31:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "368:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "253:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "264:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "276:6:13",
                        "type": ""
                      }
                    ],
                    "src": "217:198:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "507:179:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "553:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "562:6:13"
                                    },
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "570:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "555:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "555:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "555:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "528:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "537:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "524:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "524:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "549:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "520:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "520:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "517:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "588:41:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "619:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "598:20:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "598:31:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "588:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "638:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "665:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "676:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "661:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "661:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "648:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "648:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "638:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "465:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "476:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "488:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "496:6:13",
                        "type": ""
                      }
                    ],
                    "src": "420:266:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "769:219:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "815:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "824:6:13"
                                    },
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "832:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "817:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "817:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "817:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "790:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "799:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "786:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "786:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "811:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "782:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "782:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "779:2:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "850:29:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "869:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "863:5:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "863:16:13"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "854:5:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "932:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "941:6:13"
                                    },
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "949:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "934:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "934:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "934:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "901:5:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "922:5:13"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "915:6:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "915:13:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "908:6:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "908:21:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "898:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "898:32:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "891:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "891:40:13"
                          },
                          "nodeType": "YulIf",
                          "src": "888:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "967:15:13",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "977:5:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "967:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bool_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "735:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "746:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "758:6:13",
                        "type": ""
                      }
                    ],
                    "src": "691:297:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1063:120:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1109:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1118:6:13"
                                    },
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1126:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1111:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1111:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1111:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1084:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1093:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1080:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1080:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1105:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1076:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1076:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "1073:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1144:33:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1167:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1154:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1154:23:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1144:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1029:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1040:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1052:6:13",
                        "type": ""
                      }
                    ],
                    "src": "993:190:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1275:179:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1321:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1330:6:13"
                                    },
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1338:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1323:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1323:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1323:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1296:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1305:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1292:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1292:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1317:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1288:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1288:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "1285:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1356:33:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1379:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1366:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1366:23:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1356:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1398:50:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1433:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1444:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1429:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1429:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1408:20:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1408:40:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1398:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1233:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1244:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1256:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "1264:6:13",
                        "type": ""
                      }
                    ],
                    "src": "1188:266:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1563:230:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1609:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1618:6:13"
                                    },
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1626:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1611:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1611:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1611:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1584:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1593:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1580:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1580:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1605:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1576:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1576:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "1573:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1644:33:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1667:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1654:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1654:23:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1644:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1686:50:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1721:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1732:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1717:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1717:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1696:20:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1696:40:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1686:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1745:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1772:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1783:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1768:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1768:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1755:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1755:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1745:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1513:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1524:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1536:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "1544:6:13",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "1552:6:13",
                        "type": ""
                      }
                    ],
                    "src": "1459:334:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1885:171:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1931:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1940:6:13"
                                    },
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1948:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1933:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1933:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1933:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1906:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1915:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1902:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1902:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1927:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1898:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1898:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "1895:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1966:33:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1989:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1976:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1976:23:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1966:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2008:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2035:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2046:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2031:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2031:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2018:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2018:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2008:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1843:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1854:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1866:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "1874:6:13",
                        "type": ""
                      }
                    ],
                    "src": "1798:258:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2182:282:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2229:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "2238:6:13"
                                    },
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "2246:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2231:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2231:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2231:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2203:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2212:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2199:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2199:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2224:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2195:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2195:33:13"
                          },
                          "nodeType": "YulIf",
                          "src": "2192:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2264:33:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2287:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2274:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2274:23:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2264:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2306:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2333:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2344:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2329:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2329:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2316:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2316:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2306:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2357:50:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2392:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2403:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2388:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2388:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2367:20:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2367:40:13"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2357:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2416:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2443:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2454:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2439:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2439:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2426:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2426:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2416:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256t_uint256t_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2124:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2135:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2147:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "2155:6:13",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "2163:6:13",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "2171:6:13",
                        "type": ""
                      }
                    ],
                    "src": "2061:403:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2573:222:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2619:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2628:6:13"
                                    },
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2636:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2621:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2621:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2621:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2594:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2603:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2590:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2590:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2615:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2586:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2586:32:13"
                          },
                          "nodeType": "YulIf",
                          "src": "2583:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2654:33:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2677:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2664:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2664:23:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2654:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2696:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2723:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2734:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2719:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2719:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2706:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2706:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2696:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2747:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2774:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2785:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2770:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2770:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2757:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2757:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2747:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2523:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2534:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2546:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "2554:6:13",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "2562:6:13",
                        "type": ""
                      }
                    ],
                    "src": "2469:326:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2921:274:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2968:26:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2977:6:13"
                                    },
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2985:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2970:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2970:22:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2970:22:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2942:7:13"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2951:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2938:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2938:23:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2963:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2934:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2934:33:13"
                          },
                          "nodeType": "YulIf",
                          "src": "2931:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3003:33:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3026:9:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3013:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3013:23:13"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3003:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3045:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3072:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3083:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3068:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3068:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3055:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3055:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "3045:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3096:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3123:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3134:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3119:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3119:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3106:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3106:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3096:6:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3147:42:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3174:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3185:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3170:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3170:18:13"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3157:12:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3157:32:13"
                          },
                          "variableNames": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "3147:6:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2863:9:13",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2874:7:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2886:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "2894:6:13",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "2902:6:13",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "2910:6:13",
                        "type": ""
                      }
                    ],
                    "src": "2800:395:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3301:125:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3311:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3323:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3334:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3319:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3319:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3311:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3353:9:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3368:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3376:42:13",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3364:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3364:55:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3346:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3346:74:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3346:74:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3270:9:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3281:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "3292:4:13",
                        "type": ""
                      }
                    ],
                    "src": "3200:226:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3588:241:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3598:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3610:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3621:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3606:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3606:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3598:4:13"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3633:52:13",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3643:42:13",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "3637:2:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3701:9:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3716:6:13"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3724:2:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3712:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3712:15:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3694:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3694:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3694:34:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3748:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3759:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3744:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3744:18:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3768:6:13"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3776:2:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3764:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3764:15:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3737:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3737:43:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3737:43:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3800:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3811:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3796:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3796:18:13"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "3816:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3789:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3789:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3789:34:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3541:9:13",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "3552:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "3560:6:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3568:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "3579:4:13",
                        "type": ""
                      }
                    ],
                    "src": "3431:398:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3963:168:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3973:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3985:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3996:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3981:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3981:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3973:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4015:9:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4030:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4038:42:13",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4026:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4026:55:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4008:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4008:74:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4008:74:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4102:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4113:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4098:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4098:18:13"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4118:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4091:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4091:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4091:34:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3924:9:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "3935:6:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3943:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "3954:4:13",
                        "type": ""
                      }
                    ],
                    "src": "3834:297:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4257:541:13",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4267:12:13",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4277:2:13",
                            "type": "",
                            "value": "32"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "4271:2:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4295:9:13"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4306:2:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4288:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4288:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4288:21:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4318:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4338:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "4332:5:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4332:13:13"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "4322:6:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4365:9:13"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4376:2:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4361:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4361:18:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4381:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4354:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4354:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4354:34:13"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4397:13:13",
                          "value": {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4406:4:13"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nodeType": "YulTypedName",
                              "src": "4401:1:13",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4469:90:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "headStart",
                                              "nodeType": "YulIdentifier",
                                              "src": "4498:9:13"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "4509:1:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4494:3:13"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4494:17:13"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4513:2:13",
                                          "type": "",
                                          "value": "64"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4490:3:13"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4490:26:13"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value0",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4532:6:13"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4540:1:13"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "4528:3:13"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4528:14:13"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "4544:2:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4524:3:13"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4524:23:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "4518:5:13"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4518:30:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "4483:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4483:66:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4483:66:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "4430:1:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4433:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "4427:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4427:13:13"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "4441:19:13",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "4443:15:13",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4452:1:13"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4455:2:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4448:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4448:10:13"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "4443:1:13"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "4423:3:13",
                            "statements": []
                          },
                          "src": "4419:140:13"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4593:69:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "headStart",
                                              "nodeType": "YulIdentifier",
                                              "src": "4622:9:13"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "4633:6:13"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4618:3:13"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4618:22:13"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4642:2:13",
                                          "type": "",
                                          "value": "64"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4614:3:13"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4614:31:13"
                                    },
                                    {
                                      "name": "tail",
                                      "nodeType": "YulIdentifier",
                                      "src": "4647:4:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "4607:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4607:45:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4607:45:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "4574:1:13"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4577:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4571:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4571:13:13"
                          },
                          "nodeType": "YulIf",
                          "src": "4568:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4671:121:13",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4687:9:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "4706:6:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4714:2:13",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4702:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4702:15:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4719:66:13",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4698:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4698:88:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4683:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4683:104:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4789:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4679:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4679:113:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "4671:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4226:9:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4237:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "4248:4:13",
                        "type": ""
                      }
                    ],
                    "src": "4136:662:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4977:167:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4994:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5005:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4987:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4987:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4987:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5028:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5039:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5024:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5024:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5044:2:13",
                                "type": "",
                                "value": "17"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5017:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5017:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5017:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5067:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5078:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5063:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5063:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "5083:19:13",
                                "type": "",
                                "value": "Get reward failed"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5056:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5056:47:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5056:47:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5112:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5124:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5135:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5120:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5120:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5112:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_04ce35d9f70ff181b0ae3ebf7a952c9e09c7d53ca44925c0b37ef52381ec0498__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4954:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "4968:4:13",
                        "type": ""
                      }
                    ],
                    "src": "4803:341:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5323:162:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5340:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5351:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5333:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5333:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5333:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5374:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5385:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5370:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5370:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5390:2:13",
                                "type": "",
                                "value": "12"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5363:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5363:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5363:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5413:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5424:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5409:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5409:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "5429:14:13",
                                "type": "",
                                "value": "Stake failed"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5402:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5402:42:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5402:42:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5453:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5465:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5476:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5461:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5461:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5453:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_0da46a6b1264c62b2840a7d8a0098341fd6ee5723f013baa9f5b8d0726d09fd6__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5300:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "5314:4:13",
                        "type": ""
                      }
                    ],
                    "src": "5149:336:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5664:228:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5681:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5692:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5674:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5674:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5674:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5715:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5726:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5711:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5711:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5731:2:13",
                                "type": "",
                                "value": "38"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5704:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5704:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5704:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5754:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5765:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5750:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5750:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "5770:34:13",
                                "type": "",
                                "value": "Ownable: new owner is the zero a"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5743:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5743:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5743:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5825:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5836:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5821:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5821:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "5841:8:13",
                                "type": "",
                                "value": "ddress"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5814:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5814:36:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5814:36:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5859:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5871:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5882:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5867:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5867:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5859:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5641:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "5655:4:13",
                        "type": ""
                      }
                    ],
                    "src": "5490:402:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6071:165:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6088:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6099:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6081:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6081:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6081:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6122:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6133:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6118:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6118:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6138:2:13",
                                "type": "",
                                "value": "15"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6111:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6111:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6111:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6161:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6172:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6157:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6157:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "6177:17:13",
                                "type": "",
                                "value": "Withdraw failed"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6150:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6150:45:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6150:45:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6204:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6216:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6227:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6212:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6212:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "6204:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6048:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "6062:4:13",
                        "type": ""
                      }
                    ],
                    "src": "5897:339:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6415:164:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6432:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6443:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6425:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6425:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6425:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6466:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6477:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6462:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6462:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6482:2:13",
                                "type": "",
                                "value": "14"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6455:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6455:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6455:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6505:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6516:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6501:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6501:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "6521:16:13",
                                "type": "",
                                "value": "Pool not valid"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6494:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6494:44:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6494:44:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6547:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6559:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6570:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6555:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6555:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "6547:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_2eaf9d55263bf342517c38afba303f2fc4ed7d41e87baed45a01aa4e57682f94__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6392:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "6406:4:13",
                        "type": ""
                      }
                    ],
                    "src": "6241:338:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6758:164:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6775:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6786:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6768:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6768:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6768:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6809:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6820:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6805:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6805:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6825:2:13",
                                "type": "",
                                "value": "14"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6798:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6798:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6798:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6848:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6859:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6844:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6844:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "6864:16:13",
                                "type": "",
                                "value": "Invalid amount"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6837:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6837:44:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6837:44:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6890:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6902:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6913:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6898:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6898:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "6890:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6735:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "6749:4:13",
                        "type": ""
                      }
                    ],
                    "src": "6584:338:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7101:177:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7118:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7129:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7111:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7111:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7111:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7152:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7163:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7148:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7148:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7168:2:13",
                                "type": "",
                                "value": "27"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7141:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7141:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7141:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7191:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7202:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7187:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7187:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "7207:29:13",
                                "type": "",
                                "value": "SafeMath: addition overflow"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7180:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7180:57:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7180:57:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7246:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7258:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7269:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7254:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7254:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7246:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7078:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "7092:4:13",
                        "type": ""
                      }
                    ],
                    "src": "6927:351:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7457:172:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7474:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7485:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7467:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7467:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7467:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7508:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7519:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7504:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7504:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7524:2:13",
                                "type": "",
                                "value": "22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7497:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7497:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7497:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7547:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7558:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7543:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7543:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "7563:24:13",
                                "type": "",
                                "value": "AutoCompounding failed"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7536:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7536:52:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7536:52:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7597:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7609:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7620:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7605:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7605:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7597:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_699c9b671e2de33563a95ddc66de497882134f0603da04bdf05af33f6ed8c736__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7434:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "7448:4:13",
                        "type": ""
                      }
                    ],
                    "src": "7283:346:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7808:166:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7825:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7836:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7818:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7818:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7818:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7859:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7870:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7855:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7855:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7875:2:13",
                                "type": "",
                                "value": "16"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7848:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7848:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7848:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7898:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7909:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7894:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7894:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "7914:18:13",
                                "type": "",
                                "value": "Too small amount"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7887:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7887:46:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7887:46:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7942:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7954:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7965:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7950:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7950:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7942:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_739765959e54060785e473df8d2e388fba50554c3c8439735cc4e4a6d71e2daf__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7785:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "7799:4:13",
                        "type": ""
                      }
                    ],
                    "src": "7634:340:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8153:223:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8170:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8181:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8163:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8163:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8163:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8204:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8215:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8200:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8200:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8220:2:13",
                                "type": "",
                                "value": "33"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8193:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8193:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8193:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8243:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8254:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8239:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8239:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8259:34:13",
                                "type": "",
                                "value": "SafeMath: multiplication overflo"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8232:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8232:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8232:62:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8314:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8325:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8310:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8310:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8330:3:13",
                                "type": "",
                                "value": "w"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8303:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8303:31:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8303:31:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8343:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8355:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8366:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8351:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8351:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8343:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8130:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8144:4:13",
                        "type": ""
                      }
                    ],
                    "src": "7979:397:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8555:182:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8572:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8583:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8565:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8565:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8565:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8606:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8617:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8602:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8602:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8622:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8595:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8595:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8595:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8645:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8656:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8641:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8641:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8661:34:13",
                                "type": "",
                                "value": "Ownable: caller is not the owner"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8634:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8634:62:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8634:62:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8705:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8717:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8728:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8713:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8713:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8705:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8532:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8546:4:13",
                        "type": ""
                      }
                    ],
                    "src": "8381:356:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8916:163:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8933:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8944:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8926:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8926:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8926:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8967:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8978:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8963:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8963:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8983:2:13",
                                "type": "",
                                "value": "13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8956:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8956:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8956:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9006:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9017:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9002:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9002:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9022:15:13",
                                "type": "",
                                "value": "pid not valid"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8995:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8995:43:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8995:43:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9047:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9059:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9070:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9055:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9055:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9047:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_d4b662eb7f6d026d3bc5f15ac3040d8f0b81aa0783e436fb5baa409172084a1a__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8893:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8907:4:13",
                        "type": ""
                      }
                    ],
                    "src": "8742:337:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9258:166:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9275:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9286:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9268:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9268:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9268:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9309:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9320:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9305:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9305:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9325:2:13",
                                "type": "",
                                "value": "16"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9298:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9298:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9298:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9348:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9359:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9344:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9344:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9364:18:13",
                                "type": "",
                                "value": "Not valid amount"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9337:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9337:46:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9337:46:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9392:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9404:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9415:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9400:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9400:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9392:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_ddb11e80a1b52b016b8e7de8b739fabebeac362fa1014325a82e346db4fa148a__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "9235:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "9249:4:13",
                        "type": ""
                      }
                    ],
                    "src": "9084:340:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9603:162:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9620:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9631:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9613:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9613:21:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9613:21:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9654:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9665:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9650:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9650:18:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9670:2:13",
                                "type": "",
                                "value": "12"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9643:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9643:30:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9643:30:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9693:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9704:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9689:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9689:18:13"
                              },
                              {
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9709:14:13",
                                "type": "",
                                "value": "Claim failed"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9682:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9682:42:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9682:42:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9733:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9745:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9756:2:13",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9741:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9741:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9733:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_e932e875a84e6ec9f2e387bb59cbb1984158612e3a40b234acb1a84be998b164__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "9580:9:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "9594:4:13",
                        "type": ""
                      }
                    ],
                    "src": "9429:336:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9935:385:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "9945:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9957:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9968:3:13",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9953:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9953:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9945:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9988:9:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10005:6:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9999:5:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9999:13:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9981:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9981:32:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9981:32:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10033:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10044:4:13",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10029:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10029:20:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "10061:6:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10069:4:13",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10057:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10057:17:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10051:5:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10051:24:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10022:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10022:54:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10022:54:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10096:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10107:4:13",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10092:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10092:20:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "10124:6:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10132:4:13",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10120:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10120:17:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10114:5:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10114:24:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10085:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10085:54:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10085:54:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10159:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10170:4:13",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10155:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10155:20:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "10191:6:13"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "10199:4:13",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10187:3:13"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10187:17:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "10181:5:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10181:24:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10207:42:13",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10177:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10177:73:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10148:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10148:103:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10148:103:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10271:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10282:4:13",
                                    "type": "",
                                    "value": "0x80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10267:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10267:20:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "10299:6:13"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10307:4:13",
                                        "type": "",
                                        "value": "0x80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10295:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10295:17:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10289:5:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10289:24:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10260:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10260:54:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10260:54:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_struct$_LinearPoolInfo_$2709_memory_ptr__to_t_struct$_LinearPoolInfo_$2709_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "9904:9:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "9915:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "9926:4:13",
                        "type": ""
                      }
                    ],
                    "src": "9770:550:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10426:76:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "10436:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10448:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10459:2:13",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10444:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10444:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10436:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10478:9:13"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "10489:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10471:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10471:25:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10471:25:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "10395:9:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "10406:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "10417:4:13",
                        "type": ""
                      }
                    ],
                    "src": "10325:177:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10636:119:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "10646:26:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10658:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10669:2:13",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10654:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10654:18:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10646:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10688:9:13"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "10699:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10681:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10681:25:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10681:25:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10726:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10737:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10722:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10722:18:13"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "10742:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10715:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10715:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10715:34:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "10597:9:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "10608:6:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "10616:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "10627:4:13",
                        "type": ""
                      }
                    ],
                    "src": "10507:248:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10973:299:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "10983:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10995:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11006:3:13",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10991:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10991:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10983:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11026:9:13"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "11037:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11019:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11019:25:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11019:25:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11064:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11075:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11060:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11060:18:13"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "11080:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11053:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11053:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11053:34:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11107:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11118:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11103:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11103:18:13"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "11123:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11096:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11096:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11096:34:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11150:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11161:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11146:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11146:18:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "11170:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11178:42:13",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11166:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11166:55:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11139:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11139:83:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11139:83:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11242:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11253:3:13",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11238:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11238:19:13"
                              },
                              {
                                "name": "value4",
                                "nodeType": "YulIdentifier",
                                "src": "11259:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11231:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11231:35:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11231:35:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_t_uint256__to_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "10910:9:13",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "10921:6:13",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "10929:6:13",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "10937:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "10945:6:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "10953:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "10964:4:13",
                        "type": ""
                      }
                    ],
                    "src": "10760:512:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11462:206:13",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "11472:27:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11484:9:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11495:3:13",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11480:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11480:19:13"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "11472:4:13"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11515:9:13"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "11526:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11508:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11508:25:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11508:25:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11553:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11564:2:13",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11549:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11549:18:13"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "11569:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11542:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11542:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11542:34:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11596:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11607:2:13",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11592:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11592:18:13"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "11612:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11585:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11585:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11585:34:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11639:9:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11650:2:13",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11635:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11635:18:13"
                              },
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "11655:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11628:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11628:34:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11628:34:13"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "11407:9:13",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "11418:6:13",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "11426:6:13",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "11434:6:13",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "11442:6:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "11453:4:13",
                        "type": ""
                      }
                    ],
                    "src": "11277:391:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11721:80:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "11748:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "11750:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11750:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "11750:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11737:1:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "11744:1:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11740:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11740:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "11734:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11734:13:13"
                          },
                          "nodeType": "YulIf",
                          "src": "11731:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11779:16:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11790:1:13"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11793:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11786:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11786:9:13"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "11779:3:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_add_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "11704:1:13",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "11707:1:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "11713:3:13",
                        "type": ""
                      }
                    ],
                    "src": "11673:128:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11852:228:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "11883:168:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "r",
                                      "nodeType": "YulIdentifier",
                                      "src": "11904:1:13"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "11907:77:13",
                                      "type": "",
                                      "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "11897:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11897:88:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "11897:88:13"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12005:1:13",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12008:4:13",
                                      "type": "",
                                      "value": "0x12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "11998:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11998:15:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "11998:15:13"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "r",
                                      "nodeType": "YulIdentifier",
                                      "src": "12033:1:13"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12036:4:13",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "12026:6:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12026:15:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "12026:15:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11872:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11865:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11865:9:13"
                          },
                          "nodeType": "YulIf",
                          "src": "11862:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12060:14:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12069:1:13"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "12072:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "12065:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12065:9:13"
                          },
                          "variableNames": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "12060:1:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_div_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "11837:1:13",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "11840:1:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "r",
                        "nodeType": "YulTypedName",
                        "src": "11846:1:13",
                        "type": ""
                      }
                    ],
                    "src": "11806:274:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12137:176:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "12256:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "12258:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12258:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "12258:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "12168:1:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "12161:6:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12161:9:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12154:6:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12154:17:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12176:1:13"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12183:66:13",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "12251:1:13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "12179:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12179:74:13"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "12173:2:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12173:81:13"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "12150:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12150:105:13"
                          },
                          "nodeType": "YulIf",
                          "src": "12147:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12287:20:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12302:1:13"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "12305:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "12298:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12298:9:13"
                          },
                          "variableNames": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "12287:7:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_mul_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "12116:1:13",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "12119:1:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "product",
                        "nodeType": "YulTypedName",
                        "src": "12125:7:13",
                        "type": ""
                      }
                    ],
                    "src": "12085:228:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12367:76:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "12389:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "12391:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12391:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "12391:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12383:1:13"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "12386:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12380:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12380:8:13"
                          },
                          "nodeType": "YulIf",
                          "src": "12377:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12420:17:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12432:1:13"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "12435:1:13"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "12428:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12428:9:13"
                          },
                          "variableNames": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "12420:4:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_sub_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "12349:1:13",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "12352:1:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "diff",
                        "nodeType": "YulTypedName",
                        "src": "12358:4:13",
                        "type": ""
                      }
                    ],
                    "src": "12318:125:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12495:149:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "12522:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "12524:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12524:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "12524:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12515:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12508:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12508:13:13"
                          },
                          "nodeType": "YulIf",
                          "src": "12505:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12553:85:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12564:5:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12571:66:13",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12560:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12560:78:13"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "12553:3:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "decrement_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "12477:5:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "12487:3:13",
                        "type": ""
                      }
                    ],
                    "src": "12448:196:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12696:148:13",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "12787:22:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "12789:16:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12789:18:13"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "12789:18:13"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12712:5:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12719:66:13",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "12709:2:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12709:77:13"
                          },
                          "nodeType": "YulIf",
                          "src": "12706:2:13"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12818:20:13",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12829:5:13"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12836:1:13",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12825:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12825:13:13"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "12818:3:13"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "increment_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "12678:5:13",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "12688:3:13",
                        "type": ""
                      }
                    ],
                    "src": "12649:195:13"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12881:152:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12898:1:13",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12901:77:13",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12891:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12891:88:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12891:88:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12995:1:13",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12998:4:13",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12988:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12988:15:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12988:15:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13019:1:13",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13022:4:13",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "13012:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13012:15:13"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13012:15:13"
                        }
                      ]
                    },
                    "name": "panic_error_0x11",
                    "nodeType": "YulFunctionDefinition",
                    "src": "12849:184:13"
                  }
                ]
              },
              "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_t_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04ce35d9f70ff181b0ae3ebf7a952c9e09c7d53ca44925c0b37ef52381ec0498__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Get reward failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0da46a6b1264c62b2840a7d8a0098341fd6ee5723f013baa9f5b8d0726d09fd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Stake failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Withdraw failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2eaf9d55263bf342517c38afba303f2fc4ed7d41e87baed45a01aa4e57682f94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Pool not valid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_699c9b671e2de33563a95ddc66de497882134f0603da04bdf05af33f6ed8c736__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"AutoCompounding failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_739765959e54060785e473df8d2e388fba50554c3c8439735cc4e4a6d71e2daf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Too small amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d4b662eb7f6d026d3bc5f15ac3040d8f0b81aa0783e436fb5baa409172084a1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"pid not valid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ddb11e80a1b52b016b8e7de8b739fabebeac362fa1014325a82e346db4fa148a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not valid amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e932e875a84e6ec9f2e387bb59cbb1984158612e3a40b234acb1a84be998b164__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Claim failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_LinearPoolInfo_$2709_memory_ptr__to_t_struct$_LinearPoolInfo_$2709_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_t_uint256__to_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
              "id": 13,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "immutableReferences": {},
          "linkReferences": {},
          "object": "",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xD5E35184 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xED28EA05 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xED28EA05 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0xFE968E5F EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0xFEC00370 EQ PUSH2 0x5CF JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0xD5E35184 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xDBEA1B9E EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xE17BE67D EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xEA4338AE EQ PUSH2 0x54F JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0xB110EE3F GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB110EE3F EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0xB85A8B20 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0xB8E94B63 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xC3812F15 EQ PUSH2 0x4BB JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xA8989EED EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xA8E62B97 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x451 JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x82A4C881 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x82A4C881 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x890334A2 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x8A623D86 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x8CF57CB9 EQ PUSH2 0x3DA JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x71A1372D EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x365 JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0x3A71EDE8 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x3A71EDE8 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x42CBB15C EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x52A64155 EQ PUSH2 0x2F0 JUMPI PUSH2 0x1F1 JUMP JUMPDEST DUP1 PUSH4 0x1A5DC445 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x2608D9BC EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x284570BB EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x34D38DAD EQ PUSH2 0x27B JUMPI PUSH2 0x1F1 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x5EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x31CC JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x3769 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x3719 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x324C JUMP JUMPDEST PUSH2 0xA65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x31CC JUMP JUMPDEST PUSH2 0xC69 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0xD1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x322B JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x31CC JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x1559 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x1AF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x3151 JUMP JUMPDEST PUSH2 0x1B76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x322B JUMP JUMPDEST PUSH2 0x1BBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x1E66 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x20A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x215F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH2 0x232F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x32E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH2 0x234B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x32B3 JUMP JUMPDEST PUSH2 0x2367 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x44C CALLDATASIZE PUSH1 0x4 PUSH2 0x3288 JUMP JUMPDEST PUSH2 0x24CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x46C CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x24EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x2544 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x254A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3151 JUMP JUMPDEST PUSH2 0x2550 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x322B JUMP JUMPDEST PUSH2 0x260A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FB PUSH2 0x4F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x31B4 JUMP JUMPDEST PUSH2 0x264F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52C PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x31F7 JUMP JUMPDEST PUSH2 0x26A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP3 SWAP2 SWAP1 PUSH2 0x3772 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x26D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x56A CALLDATASIZE PUSH1 0x4 PUSH2 0x31F7 JUMP JUMPDEST PUSH2 0x26DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x58A CALLDATASIZE PUSH1 0x4 PUSH2 0x31CC JUMP JUMPDEST PUSH2 0x283A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x5AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3151 JUMP JUMPDEST PUSH2 0x2857 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x5CA CALLDATASIZE PUSH1 0x4 PUSH2 0x31CC JUMP JUMPDEST PUSH2 0x2923 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x5EA CALLDATASIZE PUSH1 0x4 PUSH2 0x316B JUMP JUMPDEST PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x62B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE SWAP3 SLOAD SWAP2 SWAP4 POP SWAP2 AND EQ PUSH2 0x6D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x34CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x718 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x796 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x7AC DUP8 DUP4 PUSH2 0x295D JUMP JUMPDEST SWAP1 POP PUSH2 0x7D9 PUSH2 0x7D2 PUSH2 0x2710 PUSH2 0x7CC PUSH1 0x1 SLOAD DUP6 PUSH2 0x2AD8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2B3E JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x2B80 JUMP JUMPDEST SWAP4 POP PUSH2 0x806 DUP8 PUSH2 0x800 PUSH2 0x7F9 PUSH1 0x1 SLOAD PUSH2 0x2710 PUSH2 0x2BC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST DUP5 PUSH2 0x2C0B JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x813 SWAP1 PUSH2 0x38AE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x752 JUMP JUMPDEST POP DUP3 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85B SWAP3 SWAP2 SWAP1 PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x889 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x8E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0xD7A74A496A9638B7ABA0FDAD068CBE4C42734A070B90880147304FDD2AB62FFF SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP GT DUP1 ISZERO PUSH2 0x92B JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH2 0x96B DUP5 DUP5 PUSH2 0x295D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x97B PUSH2 0x30E8 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 SWAP1 DUP2 LT DUP1 ISZERO PUSH2 0x98C JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x9C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9FC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6D PUSH2 0x2DA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA8B PUSH2 0x234B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x363F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 DUP2 MSTORE SWAP3 DUP3 ADD DUP7 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x60 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP6 ADD DUP8 DUP2 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP7 DUP3 SWAP1 MSTORE SWAP7 MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 PUSH1 0x5 SWAP1 SWAP9 MUL SWAP8 DUP9 ADD SSTORE SWAP7 MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE4 DUP8 ADD SSTORE SWAP3 MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE5 DUP7 ADD SSTORE MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE6 DUP6 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE MLOAD PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE7 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SLOAD PUSH32 0xC659FD886ACDCE2AD3A8FEC0EBA18974CBBCEBE2D76037390DD629833F76C67B SWAP2 PUSH2 0xC46 SWAP2 PUSH2 0x3862 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC5B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP GT DUP1 ISZERO PUSH2 0xC7E JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND DUP1 DUP5 MSTORE SWAP4 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP5 DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP4 DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 ADD DUP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST NUMBER SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 SWAP1 DUP2 LT DUP1 ISZERO PUSH2 0xD33 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xDA5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 NUMBER SWAP1 POP PUSH1 0x0 CALLER SWAP1 POP DUP3 PUSH1 0x4 ADD SLOAD DUP6 LT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP11 DUP6 MSTORE PUSH1 0x4 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP2 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 DUP8 GT DUP1 ISZERO SWAP1 PUSH2 0xE71 JUMPI POP PUSH1 0x0 DUP8 GT JUMPDEST PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3506 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB3 DUP10 DUP6 PUSH2 0x295D JUMP JUMPDEST SWAP1 POP PUSH2 0xEC6 DUP10 DUP8 PUSH1 0x2 ADD SLOAD DUP5 DUP9 DUP9 PUSH2 0x2DAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0xED8 SWAP1 DUP11 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xF16 SWAP1 PUSH1 0x1 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0x0 EQ DUP1 ISZERO PUSH2 0x1086 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP14 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x12B5 JUMPI PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP13 SWAP3 SWAP2 SWAP1 PUSH2 0x10AB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3862 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x10E2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP8 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP2 DUP4 KECCAK256 SLOAD SWAP2 AND SWAP3 POP SWAP1 PUSH2 0x112D DUP3 PUSH1 0x1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP DUP5 SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x1179 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x11D2 DUP2 PUSH1 0x1 PUSH2 0x2B80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP11 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP3 DUP14 AND DUP3 MSTORE DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP8 DUP3 MSTORE DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1258 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP POP JUMPDEST DUP7 SLOAD PUSH2 0x12C1 SWAP1 DUP11 PUSH2 0x2BC9 JUMP JUMPDEST DUP8 SSTORE DUP2 ISZERO PUSH2 0x13FF JUMPI PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x1303 SWAP1 DUP4 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP12 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 SLOAD SWAP2 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1377 SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C9 SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x13FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x33CD JUMP JUMPDEST PUSH1 0x3 DUP8 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x1459 SWAP1 DUP9 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1487 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14AB SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x14E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3498 JUMP JUMPDEST DUP9 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1528 SWAP2 SWAP1 PUSH2 0x3769 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 SWAP1 DUP2 LT DUP1 ISZERO PUSH2 0x156A JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x15A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15DC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x5 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 CALLER DUP1 DUP9 MSTORE SWAP1 DUP6 MSTORE DUP2 DUP8 KECCAK256 SLOAD DUP11 DUP9 MSTORE PUSH1 0x4 DUP7 MSTORE DUP3 DUP9 KECCAK256 DUP3 DUP10 MSTORE DUP7 MSTORE DUP3 DUP9 KECCAK256 DUP2 DUP10 MSTORE DUP7 MSTORE SWAP7 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP5 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD SWAP5 POP SWAP3 NUMBER SWAP3 SWAP1 SWAP2 PUSH2 0x1673 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x36AB JUMP JUMPDEST PUSH2 0x1684 DUP8 DUP7 PUSH1 0x2 ADD SLOAD DUP4 DUP7 DUP9 PUSH2 0x2DAB JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x16BF SWAP1 PUSH1 0x1 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP9 DUP2 MSTORE DUP1 DUP5 ADD DUP6 DUP2 MSTORE DUP14 DUP7 MSTORE PUSH1 0x4 DUP6 MSTORE DUP4 DUP7 KECCAK256 SWAP3 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 DUP6 MSTORE SWAP5 DUP4 MSTORE SWAP3 KECCAK256 SWAP3 MLOAD DUP4 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP2 ADD MLOAD DUP6 SLOAD PUSH2 0x173B SWAP2 PUSH2 0x2BC9 JUMP JUMPDEST DUP6 SSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP12 DUP6 MSTORE PUSH1 0x2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP2 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SSTORE PUSH1 0x7 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x19C2 JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP10 SWAP3 SWAP2 SWAP1 PUSH2 0x17B8 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3862 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x17EF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 DUP2 AND DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP8 DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP2 DUP4 KECCAK256 SLOAD SWAP2 AND SWAP3 POP SWAP1 PUSH2 0x183A DUP3 PUSH1 0x1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP DUP5 SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x1886 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x18DF DUP2 PUSH1 0x1 PUSH2 0x2B80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP11 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP3 DUP13 AND DUP3 MSTORE DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP8 DUP3 MSTORE DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1965 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP POP JUMPDEST PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x1A20 SWAP2 DUP9 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A4E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A72 SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x1AA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1AFF PUSH2 0x2DA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B1D PUSH2 0x234B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x363F JUMP JUMPDEST PUSH2 0x1B74 PUSH1 0x0 PUSH2 0x2E48 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1BB4 JUMPI PUSH1 0x0 PUSH2 0x1B92 DUP3 DUP7 PUSH2 0x295D JUMP JUMPDEST SWAP1 POP PUSH2 0x1B9E DUP4 DUP3 PUSH2 0x2B80 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x1BAC SWAP1 PUSH2 0x38AE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B7C JUMP JUMPDEST POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 SWAP1 DUP2 LT DUP1 ISZERO PUSH2 0x1BCE JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1C04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C40 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP2 POP DUP4 LT ISZERO PUSH2 0x1CDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x35AB JUMP JUMPDEST PUSH2 0x1CE7 DUP5 DUP5 CALLER PUSH2 0x2C0B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x1D68 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE DUP2 DUP6 MSTORE DUP4 DUP6 KECCAK256 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SLOAD SWAP1 DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP9 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3305 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DFB SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x1E31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP GT DUP1 ISZERO PUSH2 0x1E7B JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1EB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1EED JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE SWAP3 SLOAD SWAP2 SWAP4 POP SWAP2 AND EQ PUSH2 0x1F8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x34CF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1FFC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FD1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x209C JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x204F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2065 DUP10 DUP4 PUSH2 0x295D JUMP JUMPDEST SWAP1 POP PUSH2 0x2085 PUSH2 0x7D2 PUSH2 0x2710 PUSH2 0x7CC PUSH1 0x1 SLOAD DUP6 PUSH2 0x2AD8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP DUP1 DUP1 PUSH2 0x2094 SWAP1 PUSH2 0x38AE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x200B JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20AE PUSH2 0x2DA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20CC PUSH2 0x234B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2119 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x363F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF0A8DFD34A5EF93467EDA4DE789AC188BBB113709EC12C60F9211D0103DB6F24 SWAP1 PUSH2 0x2153 SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH2 0x3772 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2207 JUMPI PUSH1 0x0 PUSH2 0x217A DUP3 DUP6 PUSH2 0x295D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x21B7 SWAP1 DUP3 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x21F1 DUP4 DUP3 PUSH2 0x2B80 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x21FF SWAP1 PUSH2 0x38AE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2164 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x2260 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x227A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x228E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22B2 SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x22E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x36E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x236F PUSH2 0x2DA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x238D PUSH2 0x234B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x363F JUMP JUMPDEST PUSH1 0x8 SLOAD DUP5 SWAP1 DUP2 LT DUP1 ISZERO PUSH2 0x23EB JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x2421 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x245D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP5 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x1B3E62B6D2FA55EB5B813D4DD3EB7D2F61816237402204DA451BE5175DCEB67F DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x24BD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96B PUSH8 0xDE0B6B3A7640000 PUSH2 0x7CC DUP5 PUSH2 0x24E9 DUP9 DUP9 PUSH2 0x2AD8 JUMP JUMPDEST SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 SWAP1 DUP2 LT DUP1 ISZERO PUSH2 0x2500 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x2536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST PUSH2 0x2540 DUP3 CALLER PUSH2 0x2EBF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x2558 PUSH2 0x2DA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2576 PUSH2 0x234B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x363F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x265F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP GT DUP1 ISZERO PUSH2 0x26F4 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x272A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x3674 JUMP JUMPDEST DUP3 PUSH2 0x2740 JUMPI PUSH2 0x2739 DUP6 DUP6 PUSH2 0xC69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2832 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP10 DUP6 MSTORE PUSH1 0x4 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP2 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 JUMPDEST DUP1 ISZERO PUSH2 0x282A JUMPI PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 LT PUSH2 0x2817 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x2832 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 PUSH2 0x2822 DUP2 PUSH2 0x3879 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27AA JUMP JUMPDEST POP PUSH1 0x0 SWAP4 POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x285F PUSH2 0x2DA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x287D PUSH2 0x234B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x363F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x343B JUMP JUMPDEST PUSH2 0x2920 DUP2 PUSH2 0x2E48 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x299A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP5 DUP6 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 SWAP3 DUP4 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE DUP12 DUP9 MSTORE SWAP6 DUP6 MSTORE DUP3 DUP8 KECCAK256 SWAP6 DUP11 AND DUP1 DUP9 MSTORE SWAP6 DUP6 MSTORE DUP3 DUP8 KECCAK256 SLOAD DUP12 DUP9 MSTORE SWAP2 DUP6 MSTORE DUP3 DUP8 KECCAK256 SWAP6 DUP8 MSTORE SWAP5 DUP5 MSTORE DUP2 DUP7 KECCAK256 DUP2 DUP8 MSTORE DUP5 MSTORE DUP2 DUP7 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE SWAP6 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 NUMBER SWAP2 SWAP1 PUSH2 0x2A56 SWAP1 DUP4 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A6D DUP7 PUSH1 0x40 ADD MLOAD DUP4 DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP15 DUP6 MSTORE PUSH1 0x3 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP2 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x2AC9 SWAP2 PUSH2 0x2AC3 SWAP1 DUP5 PUSH2 0x2B80 JUMP JUMPDEST SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2AE7 JUMPI POP PUSH1 0x0 PUSH2 0x2AD2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF3 DUP4 DUP6 PUSH2 0x3825 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x2B00 DUP6 DUP4 PUSH2 0x37EC JUMP JUMPDEST EQ PUSH2 0x2B37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x35E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B37 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x304C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B8D DUP4 DUP6 PUSH2 0x37D4 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2B37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x353D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B37 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E20756E646572666C6F7700 DUP2 MSTORE POP PUSH2 0x309D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2C47 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x5 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP1 DUP9 MSTORE SWAP1 DUP6 MSTORE DUP2 DUP8 KECCAK256 SLOAD DUP12 DUP9 MSTORE PUSH1 0x4 DUP7 MSTORE DUP3 DUP9 KECCAK256 SWAP2 DUP9 MSTORE SWAP1 DUP6 MSTORE DUP2 DUP8 KECCAK256 DUP2 DUP9 MSTORE DUP6 MSTORE SWAP6 DUP2 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD PUSH1 0x2 DUP2 ADD SLOAD DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 DUP6 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP5 POP NUMBER SWAP4 SWAP3 SWAP2 PUSH2 0x2CD3 SWAP2 DUP10 SWAP2 SWAP1 DUP7 DUP10 PUSH2 0x2DAB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2CE5 SWAP1 DUP9 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2D23 SWAP1 PUSH1 0x1 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP10 DUP2 MSTORE DUP1 DUP5 ADD DUP8 DUP2 MSTORE DUP15 DUP7 MSTORE PUSH1 0x4 DUP6 MSTORE DUP4 DUP7 KECCAK256 SWAP3 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 DUP6 MSTORE SWAP5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP2 MLOAD DUP3 SSTORE MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE DUP5 SLOAD PUSH2 0x2D9B SWAP1 DUP9 PUSH2 0x2B80 JUMP JUMPDEST SWAP1 SWAP5 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x2DBB SWAP1 DUP5 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2DCE DUP7 DUP4 DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2E0B SWAP1 DUP3 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 SWAP8 DUP9 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP7 AND DUP11 MSTORE SWAP5 SWAP1 MSTORE SWAP3 SWAP1 SWAP7 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ECB DUP4 DUP4 PUSH2 0x295D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2F08 SWAP1 DUP3 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 SLOAD SWAP2 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x2F7C SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3336 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FCE SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x3004 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP1 PUSH2 0x36E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3087 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3094 DUP5 DUP7 PUSH2 0x37EC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x30DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x335C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3094 DUP5 DUP7 PUSH2 0x3862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1BB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3162 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2B37 DUP3 PUSH2 0x312D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x317D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3186 DUP4 PUSH2 0x312D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31A5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2B37 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31C5 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31DE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x31EE PUSH1 0x20 DUP5 ADD PUSH2 0x312D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x320B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x321B PUSH1 0x20 DUP6 ADD PUSH2 0x312D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x323D JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3261 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x3278 PUSH1 0x40 DUP7 ADD PUSH2 0x312D JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x329C JUMPI DUP3 DUP4 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x32C8 JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3388 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x336C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3399 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x47657420726577617264206661696C6564000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B65206661696C65640000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x506F6F6C206E6F742076616C6964000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH32 0x4175746F436F6D706F756E64696E67206661696C656400000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6F20736D616C6C20616D6F756E7400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH32 0x706964206E6F742076616C696400000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F742076616C696420616D6F756E7400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH32 0x436C61696D206661696C65640000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x60 DUP5 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x37E7 JUMPI PUSH2 0x37E7 PUSH2 0x38E7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3820 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x385D JUMPI PUSH2 0x385D PUSH2 0x38E7 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3874 JUMPI PUSH2 0x3874 PUSH2 0x38E7 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3888 JUMPI PUSH2 0x3888 PUSH2 0x38E7 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x38E0 JUMPI PUSH2 0x38E0 PUSH2 0x38E7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 SELFBALANCE 0xB8 0x26 PUSH24 0xC139B025D0A3E0974567A0EF7824642D13ACD210315B721E SWAP7 SUB 0xE PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
          "sourceMap": "220:14155:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14357:8;;;220:14155;;;;11273:885;;;;;;;;;;-1:-1:-1;11273:885:8;;;;;:::i;:::-;;:::i;:::-;;1822:163;;;;;;;;;;-1:-1:-1;1822:163:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;755:138;;;;;;;;;;-1:-1:-1;755:138:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12235:612::-;;;;;;;;;;-1:-1:-1;12235:612:8;;;;;:::i;:::-;;:::i;899:276::-;;;;;;;;;;-1:-1:-1;899:276:8;;;;;:::i;:::-;;:::i;3814:92::-;;;;;;;;;;;;;:::i;7191:2192::-;;;;;;;;;;-1:-1:-1;7191:2192:8;;;;;:::i;:::-;;:::i;677:69:10:-;;;;;;;;;;-1:-1:-1;677:69:10;;;;;:::i;:::-;;:::i;9389:1878:8:-;;;;;;;;;;-1:-1:-1;9389:1878:8;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;3460:348:8:-;;;;;;;;;;-1:-1:-1;3460:348:8;;;;;:::i;:::-;;:::i;4365:748::-;;;;;;;;;;-1:-1:-1;4365:748:8;;;;;:::i;:::-;;:::i;1991:628::-;;;;;;;;;;-1:-1:-1;1991:628:8;;;;;:::i;:::-;;:::i;13979:205::-;;;;;;;;;;-1:-1:-1;13979:205:8;;;;;:::i;:::-;;:::i;6081:576::-;;;;;;;;;;;;;:::i;484:28:10:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1036:85:0:-;;;;;;;;;;;;;:::i;13421:552:8:-;;;;;;;;;;-1:-1:-1;13421:552:8;;;;;:::i;:::-;;:::i;2625:207::-;;;;;;;;;;-1:-1:-1;2625:207:8;;;;;:::i;:::-;;:::i;5980:95::-;;;;;;;;;;-1:-1:-1;5980:95:8;;;;;:::i;:::-;;:::i;518:33:10:-;;;;;;;;;;;;;:::i;91:39::-;;;;;;;;;;;;;:::i;12853:103:8:-;;;;;;;;;;-1:-1:-1;12853:103:8;;;;;:::i;:::-;;:::i;1253:52:10:-;;;;;;;;;;-1:-1:-1;1253:52:10;;;;;:::i;:::-;;:::i;1566:38::-;;;;;;;;;;-1:-1:-1;1566:38:10;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;971:89::-;;;;;;;;;;-1:-1:-1;971:89:10;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;136:45::-;;;;;;;;;;;;;:::i;1181:634:8:-;;;;;;;;;;-1:-1:-1;1181:634:8;;;;;:::i;:::-;;:::i;1133:70:10:-;;;;;;;;;;-1:-1:-1;1133:70:10;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;820:85:10:-;;;;;;;;;;-1:-1:-1;820:85:10;;;;;:::i;:::-;;:::i;1383:69::-;;;;;;;;;;-1:-1:-1;1383:69:10;;;;;:::i;:::-;;:::i;11273:885:8:-;11326:33;11362:14;11377:3;11362:19;;;;;;;;;;;;;;;;;;;;;;;;11326:55;;;;;;;;11362:19;;;;;;;11326:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11425:13;;11326:55;;-1:-1:-1;11425:13:8;;11399:39;11391:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;11467:25;11495:19;;;:14;:19;;;;;;;;11467:47;;;;;;;;;;;;;;;;;;;11495:19;;11467:47;;;11495:19;11467:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11524:19;11558:13;11574:1;11558:17;;11553:347;11585:8;:15;11577:5;:23;11553:347;;;11625:14;11642:8;11651:5;11642:15;;;;;;;;;;;;;;;;;;;;;;11625:32;;11671:14;11688:35;11711:3;11716:6;11688:22;:35::i;:::-;11671:52;;11751:60;11767:43;125:5:10;11767:30:8;11778:18;;11767:6;:10;;:30;;;;:::i;:::-;:34;;:43::i;:::-;11751:11;;:15;:60::i;:::-;11737:74;;11825:64;11832:3;11837:43;11848:31;11860:18;;125:5:10;11848:11:8;;:31;;;;:::i;:::-;11837:6;;:10;:43::i;:::-;11882:6;11825;:64::i;:::-;11553:347;;11602:7;;;;;:::i;:::-;;;;11553:347;;;;11943:11;:22;;;11931:44;;;11993:10;12021:11;11931:115;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11910:184;;;;;;;;;;;;:::i;:::-;12110:40;;12138:11;;12126:10;;12110:40;;;;;11273:885;;;;:::o;1822:163::-;1917:7;1903:3;618;594:14;:21;;;;:27;:39;;;;-1:-1:-1;625:8:8;594:39;586:65;;;;;;;;;;;;:::i;:::-;1943:35:::1;1966:3;1971:6;1943:22;:35::i;:::-;1936:42:::0;1822:163;-1:-1:-1;;;;1822:163:8:o;755:138::-;827:21;;:::i;:::-;594:14;:21;813:3;;594:27;-1:-1:-1;594:39:8;;;;-1:-1:-1;625:8:8;594:39;586:65;;;;;;;;;;;;:::i;:::-;867:14:::1;882:3;867:19;;;;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;;860:26:::1;::::0;;::::1;::::0;::::1;::::0;;867:19:::1;::::0;;::::1;::::0;;::::1;860:26:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;;::::0;;;;::::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;755:138:8;;;;:::o;12235:612::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;12457:256:8::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;12457:256:8;;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;12424:14:::1;:299:::0;;::::1;::::0;;::::1;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;::::1;::::0;;;::::1;;::::0;;;;;;;;;;;12751:21;;12739:101:::1;::::0;12751:23:::1;::::0;::::1;:::i;:::-;12776:18;12796:14;12812:10;12824:15;12739:101;;;;;;;;;;:::i;:::-;;;;;;;;12235:612:::0;;;;:::o;899:276::-;988:7;974:3;618;594:14;:21;;;;:27;:39;;;;-1:-1:-1;625:8:8;594:39;586:65;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1007:20:8::1;1030:19:::0;;;:14:::1;:19;::::0;;;;;;;:27:::1;::::0;;;::::1;::::0;;;;;;;;;;1095:14;;;:9:::1;:14:::0;;;;;:22;;;;;;;;;:36;;;;;;;;;1067:64;;;;::::1;::::0;;;;;;;::::1;;::::0;;::::1;::::0;;;;899:276::o;3814:92::-;3887:12;3814:92;:::o;7191:2192::-;594:14;:21;7254:3;;594:27;-1:-1:-1;594:39:8;;;;-1:-1:-1;625:8:8;594:39;586:65;;;;;;;;;;;;:::i;:::-;7269:34:::1;7306:14;7321:3;7306:19;;;;;;;;;;;;;;;;;;;;;;;;;;7269:56;;7335:16;7354:12;7335:31;;7376:14;7393:10;7376:27;;7431:11;:27;;;7421:6;:37;;7413:66;;;;;;;;;;;;:::i;:::-;7490:20;7513:19:::0;;;:14:::1;:19;::::0;;;;;;;:27:::1;::::0;::::1;::::0;;;;;;;;;;7578:14;;;:9:::1;:14:::0;;;;;:22;;;;;;;;;:36;;;;;;;;;7550:64;;;;::::1;::::0;;;;;;;::::1;;::::0;;;::::1;::::0;;;;7632:30;::::1;::::0;::::1;::::0;:44:::1;;;7675:1;7666:6;:10;7632:44;7624:71;;;;;;;;;;;;:::i;:::-;7706:14;7723:35;7746:3;7751:6;7723:22;:35::i;:::-;7706:52;;7768:96;7805:3;7810:11;:26;;;7838:7;7847:8;7857:6;7768:36;:96::i;:::-;7901:20;::::0;::::1;::::0;7875:23:::1;::::0;7901:32:::1;::::0;7926:6;7901:24:::1;:32::i;:::-;7973:19;::::0;;;:14:::1;:19;::::0;;;;;;;:27:::1;::::0;::::1;::::0;;;;;;;;7875:58;;-1:-1:-1;7973:34:8::1;::::0;8005:1:::1;7973:31;:34::i;:::-;7943:14;:19;7958:3;7943:19;;;;;;;;;;;:27;7963:6;7943:27;;;;;;;;;;;;;;;:64;;;;8071:100;;;;;;;;8109:8;8071:100;;;;8145:15;8071:100;;::::0;8017:9:::1;:14;8027:3;8017:14;;;;;;;;;;;:22;8032:6;8017:22;;;;;;;;;;;;;;;:51;8040:14;:19;8055:3;8040:19;;;;;;;;;;;:27;8060:6;8040:27;;;;;;;;;;;;;;;;8017:51;;;;;;;;;;;:154;;;;;;;;;;;;;;;;;;;8186:15;8205:1;8186:20;:54;;;;-1:-1:-1::0;8210:21:8::1;::::0;::::1;8239:1;8210:21:::0;;;:13:::1;:21;::::0;;;;;;;:26;;;;;;;;;:30;;8186:54:::1;8182:580;;;8256:13;8336:21:::0;;;:14:::1;:21;::::0;;;;8358:28;;8272:3;;8256:13;8336:21;8358:32:::1;::::0;8389:1:::1;::::0;8358:32:::1;:::i;:::-;8336:55;;;;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;8434:21:::0;;::::1;::::0;;:13:::1;:21:::0;;;;;;:28;;;;;;;;;;8336:55;::::1;::::0;-1:-1:-1;8434:28:8;8496:25:::1;8434:28:::0;8336:55;8496:22:::1;:25::i;:::-;8536:21;::::0;;;:14:::1;:21;::::0;;;;:32;;8476:45;;-1:-1:-1;8571:19:8;;8476:45;;8536:32;::::1;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;:54:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;8648:16:::1;:9:::0;-1:-1:-1;8648:13:8::1;:16::i;:::-;8604:34;::::0;;::::1;;::::0;;;:13:::1;:34;::::0;;;;;;;:41;;;;;;;;:60;;;;8678:21;;::::1;::::0;;;;;;;:28;;;;;;;;:32;;;8724:14:::1;:21:::0;;;;:27;;;::::1;;;;;;;;;;;;;::::0;;;::::1;::::0;;;;;;;;;;;::::1;::::0;;;;;-1:-1:-1;;;;8182:580:8::1;8798:23:::0;;:35:::1;::::0;8826:6;8798:27:::1;:35::i;:::-;8772:61:::0;;8847:10;;8843:307:::1;;8902:18;::::0;;;:13:::1;:18;::::0;;;;;;;:26:::1;::::0;::::1;::::0;;;;;;;;:38:::1;::::0;8933:6;8902:30:::1;:38::i;:::-;8873:18;::::0;;;:13:::1;:18;::::0;;;;;;;:26:::1;::::0;;::::1;::::0;;;;;;;:67;;;;8991:13;;8979:109;;;;;8991:13;::::1;::::0;8979:35:::1;::::0;:109:::1;::::0;8892:6;;9064;;8979:109:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8954:185;;;;;;;;;;;;:::i;:::-;9192:22;::::0;::::1;::::0;9180:106:::1;::::0;;;;9192:22:::1;::::0;;::::1;::::0;9180:44:::1;::::0;:106:::1;::::0;9242:6;;9266;;9180:106:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9159:168;;;;;;;;;;;;:::i;:::-;9360:6;9352;9343:32;;;9368:6;9343:32;;;;;;:::i;:::-;;;;;;;;661:1;;;;;;;7191:2192:::0;;;:::o;677:69:10:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;9389:1878:8:-;594:14;:21;9445:3;;594:27;-1:-1:-1;594:39:8;;;;-1:-1:-1;625:8:8;594:39;586:65;;;;;;;;;;;;:::i;:::-;9460:34:::1;9497:14;9512:3;9497:19;;;;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;9628;;;9497::::1;9628::::0;;;;;;;9543:10:::1;9628:27:::0;;;;;;;;;;9693:14;;;:9:::1;:14:::0;;;;;:22;;;;;;;;:36;;;;;;;;;9665:64;;;;::::1;::::0;;;;;;;::::1;;::::0;;;::::1;::::0;;;9497:19;;;::::1;::::0;;::::1;::::0;-1:-1:-1;9543:10:8;9582:12:::1;::::0;9628:27;;9740:53:::1;;;;;;;;;;;;:::i;:::-;9804:96;9841:3;9846:11;:26;;;9874:7;9883:8;9893:6;9804:36;:96::i;:::-;9941:19;::::0;;;:14:::1;:19;::::0;;;;;;;:27:::1;::::0;::::1;::::0;;;;;;;;:34:::1;::::0;9973:1:::1;9941:31;:34::i;:::-;9911:19;::::0;;;:14:::1;:19;::::0;;;;;;;:27:::1;::::0;::::1;::::0;;;;;;;;;:64;;;10039:86;;;;::::1;::::0;;;;;;;::::1;::::0;;;9985:14;;;:9:::1;:14:::0;;;;;:22;;;;;;;;;:51;;;;;;;;:140;;;;;;::::1;::::0;;::::1;::::0;;;;10189:20;::::1;::::0;10161:23;;:49:::1;::::0;:27:::1;:49::i;:::-;10135:75:::0;;:23:::1;10399:34:::0;;;:29:::1;:34;::::0;;;;;;;:42:::1;::::0;::::1;::::0;;;;;;;;;;10370:18;;;:13:::1;:18:::0;;;;;:26;;;;;;;;;:71;10455:13:::1;:21:::0;;;;;:26;;;;;;;;;:30;10451:556:::1;;10501:13;10581:21:::0;;;:14:::1;:21;::::0;;;;10603:28;;10517:3;;10501:13;10581:21;10603:32:::1;::::0;10634:1:::1;::::0;10603:32:::1;:::i;:::-;10581:55;;;;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;10679:21:::0;;::::1;::::0;;:13:::1;:21:::0;;;;;;:28;;;;;;;;;;10581:55;::::1;::::0;-1:-1:-1;10679:28:8;10741:25:::1;10679:28:::0;10581:55;10741:22:::1;:25::i;:::-;10781:21;::::0;;;:14:::1;:21;::::0;;;;:32;;10721:45;;-1:-1:-1;10816:19:8;;10721:45;;10781:32;::::1;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;:54:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;10893:16:::1;:9:::0;-1:-1:-1;10893:13:8::1;:16::i;:::-;10849:34;::::0;;::::1;;::::0;;;:13:::1;:34;::::0;;;;;;;:41;;;;;;;;:60;;;;10923:21;;::::1;::::0;;;;;;;:28;;;;;;;;:32;;;10969:14:::1;:21:::0;;;;:27;;;::::1;;;;;;;;;;;;;::::0;;;::::1;::::0;;;;;;;;;;;::::1;::::0;;;;;-1:-1:-1;;;;10451:556:8::1;11049:22;::::0;::::1;::::0;11123:20:::1;::::0;::::1;::::0;11037:120:::1;::::0;;;;11049:22:::1;::::0;;::::1;::::0;11037:44:::1;::::0;:120:::1;::::0;11099:6;;11123:20;11037:120:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11016:182;;;;;;;;;;;;:::i;:::-;11239:20;::::0;::::1;::::0;11213:47:::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;661:1;;;;;9389:1878:::0;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3460:348:8:-;3525:7;3544:19;3578:6;3573:201;3594:14;:21;3590:25;;3573:201;;;3636:27;3666:33;3689:1;3692:6;3666:22;:33::i;:::-;3636:63;-1:-1:-1;3727:36:8;:11;3636:63;3727:15;:36::i;:::-;3713:50;;3573:201;3617:3;;;;;:::i;:::-;;;;3573:201;;;-1:-1:-1;3790:11:8;-1:-1:-1;3460:348:8;;;;:::o;4365:748::-;594:14;:21;4425:3;;594:27;-1:-1:-1;594:39:8;;;;-1:-1:-1;625:8:8;594:39;586:65;;;;;;;;;;;;:::i;:::-;4440:33:::1;4476:14;4491:3;4476:19;;;;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;;4440:55:::1;::::0;;::::1;::::0;::::1;::::0;;4476:19:::1;::::0;;::::1;::::0;;::::1;4440:55:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;::::1;;::::0;;;;::::1;;::::0;;;;;;-1:-1:-1;4513:40:8;::::1;;4505:69;;;;;;;;;;;;:::i;:::-;4584:31;4591:3;4596:6;4604:10;4584:6;:31::i;:::-;4643:10;4629:25;::::0;;;:13:::1;:25;::::0;;;;;;;:30;;;;;;;;;4625:175:::1;;4680:19;::::0;;;:14:::1;:19;::::0;;;;;;;:36;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;;::::1;4705:10;4680:36:::0;;::::1;::::0;;;4763:26;;4730:25;;;:13:::1;:25:::0;;;;;:30;;;;;;;;;:59;4625:175:::1;4843:11;:22;;;4831:48;;;4897:10;4933:4;4956:6;4831:145;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4810:204;;;;;;;;;;;;:::i;:::-;5030:76;::::0;5093:3;;5073:6;;5049:10:::1;::::0;5030:76:::1;::::0;;;::::1;661:1;4365:748:::0;;;:::o;1991:628::-;2070:7;2056:3;618;594:14;:21;;;;:27;:39;;;;-1:-1:-1;625:8:8;594:39;586:65;;;;;;;;;;;;:::i;:::-;2089:33:::1;2125:14;2140:3;2125:19;;;;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;2089:55:::1;::::0;;::::1;::::0;::::1;::::0;;2125:19:::1;::::0;;::::1;::::0;;::::1;2089:55:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;;2188:13;;2089:55;;-1:-1:-1;2188:13:8;::::1;2162:39;2154:66;;;;;;;;;;;;:::i;:::-;2230:25;2258:19:::0;;;:14:::1;:19;::::0;;;;;;;2230:47;;;;;;::::1;::::0;;;;;;;;;;;;2258:19;;2230:47;;::::1;2258:19:::0;2230:47;;::::1;;;;;;;;;;;;;;;;::::0;;::::1;;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;2287:19;2321:13:::0;2337:1:::1;2321:17;;2316:269;2348:8;:15;2340:5;:23;2316:269;;;2388:14;2405:8;2414:5;2405:15;;;;;;;;;;;;;;;;;;;;;;2388:32;;2434:14;2451:35;2474:3;2479:6;2451:22;:35::i;:::-;2434:52;;2514:60;2530:43;125:5:10;2530:30:8;2541:18;;2530:6;:10;;:30;;;;:::i;2514:60::-;2500:74;;2316:269;;2365:7;;;;;:::i;:::-;;;;2316:269;;;-1:-1:-1::0;2601:11:8;1991:628;-1:-1:-1;;;;;1991:628:8:o;13979:205::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;14071:18:8::1;::::0;;14099:25;;;;14139:38:::1;::::0;::::1;::::0;::::1;::::0;14071:18;;14120:4;;14139:38:::1;:::i;:::-;;;;;;;;1318:1:0;13979:205:8::0;:::o;6081:576::-;6141:10;6124:14;;6189:250;6210:14;:21;6206:25;;6189:250;;;6252:14;6269:33;6292:1;6295:6;6269:22;:33::i;:::-;6343:16;;;;:13;:16;;;;;;;;:24;;;;;;;;;;;6252:50;;-1:-1:-1;6343:36:8;;6252:50;6343:28;:36::i;:::-;6316:16;;;;:13;:16;;;;;;;;:24;;;;;;;;;;:63;6406:22;:10;6421:6;6406:14;:22::i;:::-;6393:35;;6189:250;6233:3;;;;;:::i;:::-;;;;6189:250;;;-1:-1:-1;6482:13:8;;6470:101;;;;;6482:13;;;;;6470:35;;:101;;6523:6;;6547:10;;6470:101;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6449:160;;;;;;;;;;;;:::i;:::-;6625:25;;6639:10;;6625:25;;;;;;;;;6081:576;;:::o;484:28:10:-;;;;;;:::o;1036:85:0:-;1108:6;;;;1036:85;:::o;13421:552:8:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;594:14:8::1;:21:::0;13599:3;;594:27;-1:-1:-1;594:39:8;::::1;;;-1:-1:-1::0;625:8:8;594:39:::1;586:65;;;;;;;;;;;;:::i;:::-;13614:27:::2;13644:14;13659:3;13644:19;;;;;;;;;;;;;;;;;;;;;;;;;;13614:49;;13699:18;13673:4;:23;;:44;;;;13749:14;13727:4;:19;;:36;;;;13796:15;13773:4;:20;;:38;;;;13826:140;13864:3;13881:18;13913:14;13941:15;13826:140;;;;;;;;;:::i;:::-;;;;;;;;661:1;1318::0::1;13421:552:8::0;;;;:::o;2625:207::-;2735:7;2761:64;175:6:10;2761:46:8;2795:11;2761:29;:14;2780:9;2761:18;:29::i;:::-;:33;;:46::i;5980:95::-;594:14;:21;6030:3;;594:27;-1:-1:-1;594:39:8;;;;-1:-1:-1;625:8:8;594:39;586:65;;;;;;;;;;;;:::i;:::-;6045:23:::1;6052:3;6057:10;6045:6;:23::i;:::-;5980:95:::0;;:::o;518:33:10:-;;;;:::o;91:39::-;125:5;91:39;:::o;12853:103:8:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;12925:13:8::1;:24:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;12853:103::o;1253:52:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1253:52:10;;-1:-1:-1;1253:52:10:o;1566:38::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1566:38:10;;;;;;;;;;:::o;971:89::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;136:45::-;175:6;136:45;:::o;1181:634:8:-;1298:7;1284:3;618;594:14;:21;;;;:27;:39;;;;-1:-1:-1;625:8:8;594:39;586:65;;;;;;;;;;;;:::i;:::-;1321:16;1317:82:::1;;1360:28;1376:3;1381:6;1360:15;:28::i;:::-;1353:35;;;;1317:82;1409:20;1432:19:::0;;;:14:::1;:19;::::0;;;;;;;:27:::1;::::0;::::1;::::0;;;;;;;;;;1497:14;;;:9:::1;:14:::0;;;;;:22;;;;;;;;;:36;;;;;;;;;1469:64;;;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;1544:247:::1;1579:5:::0;;1544:247:::1;;1605:28;1636:14:::0;;;:9:::1;:14;::::0;;;;;;;:22:::1;::::0;::::1;::::0;;;;;;;:25;;;;;;;;;1605:56;;;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;1679:37;-1:-1:-1;1675:106:8::1;;1743:23;;::::0;;-1:-1:-1;1736:30:8::1;::::0;-1:-1:-1;;;1736:30:8::1;1675:106;-1:-1:-1::0;1586:3:8;::::1;::::0;::::1;:::i;:::-;;;;1544:247;;;;1807:1;1800:8;;;;661:1;1181:634:::0;;;;;;:::o;1133:70:10:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;2006:22:::1;::::0;::::1;1998:73;;;;;;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;820:85:10:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1383:69::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;2838:616:8:-;2921:7;2940:33;2976:14;2991:3;2976:19;;;;;;;;;;;;;;;;;;;;;;;;2940:55;;;;;;;;2976:19;;;;;;;2940:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3028:19;;;;;;;;;:27;;;;;;;;;;;;;3093:14;;;;;;;;;:22;;;;;;;;;:36;;;;;;;;3065:64;;;;;;;;;;;;;;;;;;;;;;;2940:55;;-1:-1:-1;3028:27:8;;3065:64;;3162:12;;2976:19;3204:37;;3162:12;;3204:16;:37::i;:::-;3184:57;;3251:14;3268:76;3284:11;:26;;;3312:9;3323:7;:20;;;3268:15;:76::i;:::-;3420:18;;;;:13;:18;;;;;;;;:26;;;;;;;;;;;;;3361:34;;;:29;:34;;;;;:42;;;;;;;;;3251:93;;-1:-1:-1;3361:86:8;;:54;;3251:93;3361:46;:54::i;:::-;:58;;:86::i;:::-;3354:93;;;;;;;;2838:616;;;;;:::o;2655:459:7:-;2713:7;2954:6;2950:45;;-1:-1:-1;2983:1:7;2976:8;;2950:45;3005:9;3017:5;3021:1;3017;:5;:::i;:::-;3005:17;-1:-1:-1;3049:1:7;3040:5;3044:1;3005:17;3040:5;:::i;:::-;:10;3032:56;;;;;;;;;;;;:::i;:::-;3106:1;2655:459;-1:-1:-1;;;2655:459:7:o;4266:130::-;4324:7;4350:39;4354:1;4357;4350:39;;;;;;;;;;;;;;;;;:3;:39::i;958:176::-;1016:7;;1047:5;1051:1;1047;:5;:::i;:::-;1035:17;;1075:1;1070;:6;;1062:46;;;;;;;;;;;;:::i;1821:135::-;1879:7;1905:44;1909:1;1912;1905:44;;;;;;;;;;;;;;;;;:3;:44::i;5119:803:8:-;5198:34;5235:14;5250:3;5235:19;;;;;;;;;;;;;;;;;;;;;;;;5328;;;5235;5328;;;;;;;:27;;;;;;;;;;;;;5394:14;;;:9;:14;;;;;:22;;;;;;;;;:36;;;;;;;;;5235:19;;;;;;;5483:26;;;;5441:96;;;;;;;;;;;;;;;;;;;;;;;5235:19;-1:-1:-1;5283:12:8;;5328:27;5394:36;5441:96;;5328:19;;5483:26;5283:12;5328:27;5441:36;:96::i;:::-;5574:20;;;;5548:23;;5574:32;;5599:6;5574:24;:32::i;:::-;5646:19;;;;:14;:19;;;;;;;;:27;;;;;;;;;;;5548:58;;-1:-1:-1;5646:34:8;;5678:1;5646:31;:34::i;:::-;5616:19;;;;:14;:19;;;;;;;;:27;;;;;;;;;;;;:64;;;5744:100;;;;;;;;;;;;;;;;5690:14;;;:9;:14;;;;;:22;;;;;;;;;:51;;;;;;;;;;:154;;;;;;;;;;5880:23;;:35;;5908:6;5880:27;:35::i;:::-;5854:61;;;-1:-1:-1;;;;;;;5119:803:8:o;640:96:4:-;719:10;640:96;:::o;3912:447:8:-;4116:22;;4080:17;;4100:39;;:11;;:15;:39::i;:::-;4080:59;;4149:19;4171:67;4187:14;4203:9;4214:10;:23;;;4171:15;:67::i;:::-;4293:34;;;;:29;:34;;;;;;;;:42;;;;;;;;;;;4149:89;;-1:-1:-1;4293:59:8;;4149:89;4293:46;:59::i;:::-;4248:34;;;;:29;:34;;;;;;;;:42;;;;;;;;;;;;;:104;;;;-1:-1:-1;;;;;3912:447:8:o;2270:187:0:-;2362:6;;;;2378:17;;;;;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;6663:401:8:-;6726:14;6743:35;6766:3;6771:6;6743:22;:35::i;:::-;6817:18;;;;:13;:18;;;;;;;;:26;;;;;;;;;;;6726:52;;-1:-1:-1;6817:38:8;;6726:52;6817:30;:38::i;:::-;6788:18;;;;:13;:18;;;;;;;;:26;;;;;;;;;;;:67;;;;6898:13;;6886:97;;;;;6898:13;;;6886:35;;:97;;6807:6;;6963;;6886:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6865:156;;;;;;;;;;;;:::i;:::-;7036:21;;7050:6;;7036:21;;;;;;;;;6663:401;;;:::o;4871:338:7:-;4957:7;5057:12;5050:5;5042:28;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5080:9:7;5092:5;5096:1;5092;:5;:::i;:::-;5080:17;4871:338;-1:-1:-1;;;;;4871:338:7:o;2235:187::-;2321:7;2356:12;2348:6;;;;2340:29;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2379:9:7;2391:5;2395:1;2391;:5;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:198:13:-;84:20;;144:42;133:54;;123:65;;113:2;;202:1;199;192:12;217:198;;329:2;317:9;308:7;304:23;300:32;297:2;;;350:6;342;335:22;297:2;378:31;399:9;378:31;:::i;420:266::-;;;549:2;537:9;528:7;524:23;520:32;517:2;;;570:6;562;555:22;517:2;598:31;619:9;598:31;:::i;:::-;588:41;676:2;661:18;;;;648:32;;-1:-1:-1;;;507:179:13:o;691:297::-;;811:2;799:9;790:7;786:23;782:32;779:2;;;832:6;824;817:22;779:2;869:9;863:16;922:5;915:13;908:21;901:5;898:32;888:2;;949:6;941;934:22;993:190;;1105:2;1093:9;1084:7;1080:23;1076:32;1073:2;;;1126:6;1118;1111:22;1073:2;-1:-1:-1;1154:23:13;;1063:120;-1:-1:-1;1063:120:13:o;1188:266::-;;;1317:2;1305:9;1296:7;1292:23;1288:32;1285:2;;;1338:6;1330;1323:22;1285:2;1379:9;1366:23;1356:33;;1408:40;1444:2;1433:9;1429:18;1408:40;:::i;:::-;1398:50;;1275:179;;;;;:::o;1459:334::-;;;;1605:2;1593:9;1584:7;1580:23;1576:32;1573:2;;;1626:6;1618;1611:22;1573:2;1667:9;1654:23;1644:33;;1696:40;1732:2;1721:9;1717:18;1696:40;:::i;:::-;1686:50;;1783:2;1772:9;1768:18;1755:32;1745:42;;1563:230;;;;;:::o;1798:258::-;;;1927:2;1915:9;1906:7;1902:23;1898:32;1895:2;;;1948:6;1940;1933:22;1895:2;-1:-1:-1;;1976:23:13;;;2046:2;2031:18;;;2018:32;;-1:-1:-1;1885:171:13:o;2061:403::-;;;;;2224:3;2212:9;2203:7;2199:23;2195:33;2192:2;;;2246:6;2238;2231:22;2192:2;2287:9;2274:23;2264:33;;2344:2;2333:9;2329:18;2316:32;2306:42;;2367:40;2403:2;2392:9;2388:18;2367:40;:::i;:::-;2182:282;;;;-1:-1:-1;2357:50:13;;2454:2;2439:18;2426:32;;-1:-1:-1;;2182:282:13:o;2469:326::-;;;;2615:2;2603:9;2594:7;2590:23;2586:32;2583:2;;;2636:6;2628;2621:22;2583:2;-1:-1:-1;;2664:23:13;;;2734:2;2719:18;;2706:32;;-1:-1:-1;2785:2:13;2770:18;;;2757:32;;2573:222;-1:-1:-1;2573:222:13:o;2800:395::-;;;;;2963:3;2951:9;2942:7;2938:23;2934:33;2931:2;;;2985:6;2977;2970:22;2931:2;-1:-1:-1;;3013:23:13;;;3083:2;3068:18;;3055:32;;-1:-1:-1;3134:2:13;3119:18;;3106:32;;3185:2;3170:18;3157:32;;-1:-1:-1;2921:274:13;-1:-1:-1;2921:274:13:o;3200:226::-;3376:42;3364:55;;;;3346:74;;3334:2;3319:18;;3301:125::o;3431:398::-;3643:42;3712:15;;;3694:34;;3764:15;;;;3759:2;3744:18;;3737:43;3811:2;3796:18;;3789:34;;;;3621:2;3606:18;;3588:241::o;3834:297::-;4038:42;4026:55;;;;4008:74;;4113:2;4098:18;;4091:34;3996:2;3981:18;;3963:168::o;4136:662::-;;4277:2;4306;4295:9;4288:21;4338:6;4332:13;4381:6;4376:2;4365:9;4361:18;4354:34;4406:4;4419:140;4433:6;4430:1;4427:13;4419:140;;;4528:14;;;4524:23;;4518:30;4494:17;;;4513:2;4490:26;4483:66;4448:10;;4419:140;;;4577:6;4574:1;4571:13;4568:2;;;4647:4;4642:2;4633:6;4622:9;4618:22;4614:31;4607:45;4568:2;-1:-1:-1;4714:2:13;4702:15;4719:66;4698:88;4683:104;;;;4789:2;4679:113;;4257:541;-1:-1:-1;;;4257:541:13:o;4803:341::-;5005:2;4987:21;;;5044:2;5024:18;;;5017:30;5083:19;5078:2;5063:18;;5056:47;5135:2;5120:18;;4977:167::o;5149:336::-;5351:2;5333:21;;;5390:2;5370:18;;;5363:30;5429:14;5424:2;5409:18;;5402:42;5476:2;5461:18;;5323:162::o;5490:402::-;5692:2;5674:21;;;5731:2;5711:18;;;5704:30;5770:34;5765:2;5750:18;;5743:62;5841:8;5836:2;5821:18;;5814:36;5882:3;5867:19;;5664:228::o;5897:339::-;6099:2;6081:21;;;6138:2;6118:18;;;6111:30;6177:17;6172:2;6157:18;;6150:45;6227:2;6212:18;;6071:165::o;6241:338::-;6443:2;6425:21;;;6482:2;6462:18;;;6455:30;6521:16;6516:2;6501:18;;6494:44;6570:2;6555:18;;6415:164::o;6584:338::-;6786:2;6768:21;;;6825:2;6805:18;;;6798:30;6864:16;6859:2;6844:18;;6837:44;6913:2;6898:18;;6758:164::o;6927:351::-;7129:2;7111:21;;;7168:2;7148:18;;;7141:30;7207:29;7202:2;7187:18;;7180:57;7269:2;7254:18;;7101:177::o;7283:346::-;7485:2;7467:21;;;7524:2;7504:18;;;7497:30;7563:24;7558:2;7543:18;;7536:52;7620:2;7605:18;;7457:172::o;7634:340::-;7836:2;7818:21;;;7875:2;7855:18;;;7848:30;7914:18;7909:2;7894:18;;7887:46;7965:2;7950:18;;7808:166::o;7979:397::-;8181:2;8163:21;;;8220:2;8200:18;;;8193:30;8259:34;8254:2;8239:18;;8232:62;8330:3;8325:2;8310:18;;8303:31;8366:3;8351:19;;8153:223::o;8381:356::-;8583:2;8565:21;;;8602:18;;;8595:30;8661:34;8656:2;8641:18;;8634:62;8728:2;8713:18;;8555:182::o;8742:337::-;8944:2;8926:21;;;8983:2;8963:18;;;8956:30;9022:15;9017:2;9002:18;;8995:43;9070:2;9055:18;;8916:163::o;9084:340::-;9286:2;9268:21;;;9325:2;9305:18;;;9298:30;9364:18;9359:2;9344:18;;9337:46;9415:2;9400:18;;9258:166::o;9429:336::-;9631:2;9613:21;;;9670:2;9650:18;;;9643:30;9709:14;9704:2;9689:18;;9682:42;9756:2;9741:18;;9603:162::o;9770:550::-;;9968:3;9957:9;9953:19;9945:27;;10005:6;9999:13;9988:9;9981:32;10069:4;10061:6;10057:17;10051:24;10044:4;10033:9;10029:20;10022:54;10132:4;10124:6;10120:17;10114:24;10107:4;10096:9;10092:20;10085:54;10207:42;10199:4;10191:6;10187:17;10181:24;10177:73;10170:4;10159:9;10155:20;10148:103;10307:4;10299:6;10295:17;10289:24;10282:4;10271:9;10267:20;10260:54;9935:385;;;;:::o;10325:177::-;10471:25;;;10459:2;10444:18;;10426:76::o;10507:248::-;10681:25;;;10737:2;10722:18;;10715:34;10669:2;10654:18;;10636:119::o;10760:512::-;11019:25;;;11075:2;11060:18;;11053:34;;;;11118:2;11103:18;;11096:34;;;;11178:42;11166:55;11161:2;11146:18;;11139:83;11253:3;11238:19;;11231:35;11006:3;10991:19;;10973:299::o;11277:391::-;11508:25;;;11564:2;11549:18;;11542:34;;;;11607:2;11592:18;;11585:34;11650:2;11635:18;;11628:34;11495:3;11480:19;;11462:206::o;11673:128::-;;11744:1;11740:6;11737:1;11734:13;11731:2;;;11750:18;;:::i;:::-;-1:-1:-1;11786:9:13;;11721:80::o;11806:274::-;;11872:1;11862:2;;11907:77;11904:1;11897:88;12008:4;12005:1;11998:15;12036:4;12033:1;12026:15;11862:2;-1:-1:-1;12065:9:13;;11852:228::o;12085:::-;;12251:1;12183:66;12179:74;12176:1;12173:81;12168:1;12161:9;12154:17;12150:105;12147:2;;;12258:18;;:::i;:::-;-1:-1:-1;12298:9:13;;12137:176::o;12318:125::-;;12386:1;12383;12380:8;12377:2;;;12391:18;;:::i;:::-;-1:-1:-1;12428:9:13;;12367:76::o;12448:196::-;;12515:5;12505:2;;12524:18;;:::i;:::-;-1:-1:-1;12571:66:13;12560:78;;12495:149::o;12649:195::-;;12719:66;12712:5;12709:77;12706:2;;;12789:18;;:::i;:::-;-1:-1:-1;12836:1:13;12825:13;;12696:148::o;12849:184::-;12901:77;12898:1;12891:88;12998:4;12995:1;12988:15;13022:4;13019:1;13012:15"
        },
        "gasEstimates": {
          "creation": {
            "codeDepositCost": "2933600",
            "executionCost": "infinite",
            "totalCost": "infinite"
          },
          "external": {
            "PERCENT()": "295",
            "REWARD_SCALE()": "317",
            "addNewStakingPool(uint256,uint256,address,uint256)": "111354",
            "autoCompoundingFee()": "1073",
            "autoCoumpound(uint256)": "infinite",
            "calculateReward(uint256,uint256,uint256)": "infinite",
            "changeAutoCompoundingFee(uint256)": "23371",
            "claimAllReward()": "infinite",
            "claimReward(uint256)": "infinite",
            "claimedByUser(uint256,address)": "1450",
            "emergencyWithdraw(uint256)": "infinite",
            "getAllAmountReward(address)": "infinite",
            "getAmountRewardInPool(uint256,address)": "infinite",
            "getBlockNumber()": "295",
            "getCoumpoundingReward(uint256)": "infinite",
            "getPoolInfoFromId(uint256)": "6599",
            "getPriorStakedAmount(uint256,address,uint256)": "infinite",
            "getStakedAmount(uint256,address)": "4126",
            "hasUserInPool(address,uint256)": "1443",
            "linearPoolInfo(uint256)": "5423",
            "listUserInPool(uint256,uint256)": "2216",
            "owner()": "1092",
            "renounceOwnership()": "23512",
            "rewardAddress()": "1157",
            "setNewRewardToken(address)": "22115",
            "setStakingPool(uint256,uint256,uint256,uint256)": "65001",
            "stake(uint256,uint256)": "infinite",
            "stakedMap(uint256,address,uint256)": "2315",
            "stakedMapIndex(uint256,address)": "1382",
            "totalClaimForLatestStakeBlock(uint256,address)": "1426",
            "transferOwnership(address)": "23681",
            "withdraw(uint256,uint256)": "infinite"
          },
          "internal": {
            "_claim(uint256,address)": "infinite",
            "_getAmountRewardInPool(uint256,address)": "infinite",
            "_stake(uint256,uint256,address)": "infinite",
            "_updateTotalClaimForLatestStakeBlock(uint256,uint256,struct StakingStorage.Checkpoint memory,uint256,address)": "infinite"
          }
        },
        "methodIdentifiers": {
          "PERCENT()": "b85a8b20",
          "REWARD_SCALE()": "e17be67d",
          "addNewStakingPool(uint256,uint256,address,uint256)": "34d38dad",
          "autoCompoundingFee()": "b110ee3f",
          "autoCoumpound(uint256)": "1a5dc445",
          "calculateReward(uint256,uint256,uint256)": "a8e62b97",
          "changeAutoCompoundingFee(uint256)": "890334a2",
          "claimAllReward()": "8a623d86",
          "claimReward(uint256)": "ae169a50",
          "claimedByUser(uint256,address)": "52a64155",
          "emergencyWithdraw(uint256)": "5312ea8e",
          "getAllAmountReward(address)": "71a1372d",
          "getAmountRewardInPool(uint256,address)": "2608d9bc",
          "getBlockNumber()": "42cbb15c",
          "getCoumpoundingReward(uint256)": "82a4c881",
          "getPoolInfoFromId(uint256)": "284570bb",
          "getPriorStakedAmount(uint256,address,uint256)": "ea4338ae",
          "getStakedAmount(uint256,address)": "3a71ede8",
          "hasUserInPool(address,uint256)": "fec00370",
          "linearPoolInfo(uint256)": "d5e35184",
          "listUserInPool(uint256,uint256)": "c3812f15",
          "owner()": "8da5cb5b",
          "renounceOwnership()": "715018a6",
          "rewardAddress()": "8cf57cb9",
          "setNewRewardToken(address)": "b8e94b63",
          "setStakingPool(uint256,uint256,uint256,uint256)": "a8989eed",
          "stake(uint256,uint256)": "7b0472f0",
          "stakedMap(uint256,address,uint256)": "dbea1b9e",
          "stakedMapIndex(uint256,address)": "ed28ea05",
          "totalClaimForLatestStakeBlock(uint256,address)": "fe968e5f",
          "transferOwnership(address)": "f2fde38b",
          "withdraw(uint256,uint256)": "441a3e70"
        }
      },
      "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"chn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_autoCompoundingFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AutoCompounding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"ChangeAutoCompoundingFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumStakeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumWithdraw\",\"type\":\"uint256\"}],\"name\":\"ChangeStakingPoolSetting\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositRewardPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldValue\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"GuardianUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizedAddress\",\"type\":\"address\"}],\"name\":\"GuardianshipTransferAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MinimumStakeAmountUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumStakeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenStake\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumWithdraw\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardFromEmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawRewardPool\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_SCALE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenStake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumWithdraw\",\"type\":\"uint256\"}],\"name\":\"addNewStakingPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoCompoundingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"autoCoumpound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"diffBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"changeAutoCompoundingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAllReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getAllAmountReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getAmountRewardInPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getCoumpoundingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getPoolInfoFromId\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenStake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumWithdraw\",\"type\":\"uint256\"}],\"internalType\":\"struct StakingStorage.LinearPoolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hasUserInPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"linearPoolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenStake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumWithdraw\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listUserInPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"setNewRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumWithdraw\",\"type\":\"uint256\"}],\"name\":\"setStakingPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakedMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedMapIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalClaimForLatestStakeBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,uint256)\":{\"params\":{\"amount\":\"The amount to withdraw\"}}},\"title\":\"Staking Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimReward(uint256)\":{\"notice\":\"Claims reward\"},\"withdraw(uint256,uint256)\":{\"notice\":\"Withdraws the provided amount of staked\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/IErc20Token.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface IErc20Token {\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0xfd06f7eb49588f9cf920206c96c1a33165a5d2df4fbc22545a789b62ae16bc97\"},\"contracts/SafeMath.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\n// From https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/Math.sol\\n// Subject to the MIT license.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting with custom message on overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, errorMessage);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on underflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot underflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction underflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on underflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot underflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, errorMessage);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers.\\n     * Reverts on division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers.\\n     * Reverts with custom message on division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x89eeabd929bcf28e6e3ae662432728ad2450f54e186206c441b273d7a962cd5e\"},\"contracts/Staking.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./IErc20Token.sol\\\";\\nimport \\\"./StakingStorage.sol\\\";\\nimport \\\"./StakingEvent.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/// @title Staking Contract\\ncontract Staking is StakingStorage, StakingEvent, Ownable {\\n    using SafeMath for uint256;\\n\\n    constructor(address chn, uint256 _autoCompoundingFee) Ownable() {\\n        rewardAddress = chn;\\n        autoCompoundingFee = _autoCompoundingFee;\\n    }\\n\\n    /********************\\n     * MODIFIER *\\n     ********************/\\n\\n    modifier pidValid(uint256 pid) {\\n        require(linearPoolInfo.length > pid && pid >= 0, \\\"pid not valid\\\");\\n        _;\\n    }\\n\\n    /********************\\n     * STANDARD ACTIONS *\\n     ********************/\\n\\n    function getPoolInfoFromId(uint pid) public view pidValid(pid) returns (LinearPoolInfo memory) {\\n        return linearPoolInfo[pid];\\n    }\\n\\n    function getStakedAmount(uint256 pid, address staker) public view pidValid(pid) returns (uint256) {\\n        uint256 currentIndex = stakedMapIndex[pid][staker];\\n        Checkpoint memory current = stakedMap[pid][staker][currentIndex];\\n        return current.stakedAmount;\\n    }\\n\\n    function getPriorStakedAmount(uint256 pid, address staker, uint256 blockNumber) external view pidValid(pid) returns (uint256) {\\n        if (blockNumber == 0) {\\n            return getStakedAmount(pid, staker);\\n        }\\n\\n        uint256 currentIndex = stakedMapIndex[pid][staker];\\n        Checkpoint memory current = stakedMap[pid][staker][currentIndex];\\n\\n        for (uint i = current.blockNumber; i > 0; i--) {\\n            Checkpoint memory checkpoint = stakedMap[pid][staker][i];\\n            if (checkpoint.blockNumber <= blockNumber) {\\n                return checkpoint.stakedAmount;\\n            }\\n        }\\n        return 0;\\n    }\\n\\n\\n    function getAmountRewardInPool(uint256 pid, address staker) public view pidValid(pid) returns (uint256) {\\n        return _getAmountRewardInPool(pid, staker);\\n    }\\n\\n    function getCoumpoundingReward(uint256 pid) public view pidValid(pid) returns (uint256) {\\n        LinearPoolInfo memory currentPool = linearPoolInfo[pid];\\n        require(currentPool.tokenStake == rewardAddress, \\\"Pool not valid\\\");\\n        address[] memory listUser = listUserInPool[pid];\\n        uint256 totalReward;\\n        for (uint256 index = 0; index < listUser.length; index++) {\\n            address staker = listUser[index];\\n            uint256 reward = _getAmountRewardInPool(pid, staker);\\n            totalReward = totalReward.add(reward.mul(autoCompoundingFee).div(PERCENT));\\n        }\\n        return totalReward;\\n    }\\n\\n    function calculateReward(uint256 rewardPerBlock, uint256 diffBlock, uint256 stakeAmount) public pure returns (uint256) {\\n        return rewardPerBlock.mul(diffBlock).mul(stakeAmount).div(REWARD_SCALE);\\n    }\\n\\n    function _getAmountRewardInPool(uint256 pid, address staker) private view returns (uint256) {\\n        LinearPoolInfo memory currentPool = linearPoolInfo[pid];\\n        uint256 currentIndex = stakedMapIndex[pid][staker];\\n        Checkpoint memory current = stakedMap[pid][staker][currentIndex];\\n        uint256 currentBlock = block.number;\\n        uint256 diffBlock = currentBlock.sub(current.blockNumber);\\n        uint256 reward = calculateReward(currentPool.rewardPerBlock, diffBlock, current.stakedAmount);\\n        return totalClaimForLatestStakeBlock[pid][staker].add(reward).sub(claimedByUser[pid][staker]);\\n    }\\n\\n    function getAllAmountReward(address staker) public view returns (uint256) {\\n        uint256 totalAmount;\\n        for (uint i = 0; i < linearPoolInfo.length; i++) {\\n            uint256 pendingRewardInPool = _getAmountRewardInPool(i, staker);\\n            totalAmount = totalAmount.add(pendingRewardInPool);\\n        }\\n        return totalAmount;\\n    }\\n\\n    function getBlockNumber() public view returns (uint256) {\\n        return block.number;\\n    }\\n\\n    function _updateTotalClaimForLatestStakeBlock(uint256 pid, uint256 rewardPerBlock, Checkpoint memory checkpoint, uint256 blockNumber, address staker) private {\\n        uint256 diffBlock = blockNumber.sub(checkpoint.blockNumber);\\n        uint256 claimAmount = calculateReward(rewardPerBlock, diffBlock, checkpoint.stakedAmount);\\n        totalClaimForLatestStakeBlock[pid][staker] = totalClaimForLatestStakeBlock[pid][staker].add(claimAmount);\\n    }\\n\\n    function stake(uint256 pid, uint256 amount) public pidValid(pid) {\\n        LinearPoolInfo memory currentPool = linearPoolInfo[pid];\\n        require(amount >= currentPool.minimumStakeAmount, \\\"Too small amount\\\");\\n        _stake(pid, amount, msg.sender);\\n        if (hasUserInPool[msg.sender][pid] == 0) {\\n            listUserInPool[pid].push(msg.sender);\\n            hasUserInPool[msg.sender][pid] = listUserInPool[pid].length;\\n        }\\n\\n        require(\\n            IErc20Token(currentPool.tokenStake).transferFrom(\\n                msg.sender,\\n                address(this),\\n                amount\\n            ),\\n            \\\"Stake failed\\\"\\n        );\\n\\n        emit Stake(\\n            msg.sender,\\n            amount,\\n            pid\\n        );\\n    }\\n\\n    function _stake(uint256 pid, uint256 amount, address staker) private {\\n        LinearPoolInfo storage currentPool = linearPoolInfo[pid];\\n        uint256 blockNum = block.number;\\n        uint256 currentIndex = stakedMapIndex[pid][staker];\\n        Checkpoint storage current = stakedMap[pid][staker][currentIndex];\\n\\n        _updateTotalClaimForLatestStakeBlock(pid, currentPool.rewardPerBlock, current, blockNum, staker);\\n\\n        uint256 newStakedAmount = current.stakedAmount.add(amount);\\n        stakedMapIndex[pid][staker] = stakedMapIndex[pid][staker].add(1);\\n        stakedMap[pid][staker][stakedMapIndex[pid][staker]] = Checkpoint({\\n            blockNumber: blockNum,\\n            stakedAmount: newStakedAmount\\n        });\\n        currentPool.totalStaked = currentPool.totalStaked.add(amount);\\n    }\\n\\n    /**\\n     * @notice Claims reward\\n     *\\n     */\\n    function claimReward(uint256 pid) public pidValid(pid) {\\n        _claim(pid, msg.sender);\\n    }\\n\\n    function claimAllReward() public {\\n        address staker = msg.sender;\\n        uint256 totalClaim;\\n        for (uint i = 0; i < linearPoolInfo.length; i++) {\\n            uint256 amount = _getAmountRewardInPool(i, staker);\\n            claimedByUser[i][staker] = claimedByUser[i][staker].add(amount);\\n            totalClaim = totalClaim.add(amount);\\n        }\\n\\n        require(\\n            IErc20Token(rewardAddress).transfer(\\n                staker,\\n                totalClaim\\n            ),\\n            \\\"Claim failed\\\"\\n        );\\n\\n        emit Claim(staker, totalClaim);\\n    }\\n\\n    function _claim(uint256 pid, address staker) private {\\n        uint256 amount = _getAmountRewardInPool(pid, staker);\\n        claimedByUser[pid][staker] = claimedByUser[pid][staker].add(amount);\\n        require(\\n            IErc20Token(rewardAddress).transfer(\\n                staker,\\n                amount\\n            ),\\n            \\\"Claim failed\\\"\\n        );\\n        emit Claim(staker, amount);\\n    }\\n\\n    /**\\n     * @notice Withdraws the provided amount of staked\\n     *\\n     * @param amount The amount to withdraw\\n    */\\n    function withdraw(uint256 pid, uint256 amount) public pidValid(pid) {\\n        LinearPoolInfo storage currentPool = linearPoolInfo[pid];\\n        uint256 blockNum = block.number;\\n        address staker = msg.sender;\\n        require(amount >= currentPool.minimumWithdraw, \\\"Too small amount\\\");\\n\\n        uint256 currentIndex = stakedMapIndex[pid][staker];\\n        Checkpoint memory current = stakedMap[pid][staker][currentIndex];\\n        require(amount <= current.stakedAmount && amount > 0, \\\"Invalid amount\\\");\\n\\n        uint256 reward = _getAmountRewardInPool(pid, staker);\\n        _updateTotalClaimForLatestStakeBlock(pid, currentPool.rewardPerBlock, current, blockNum, staker);\\n\\n        uint256 newStakedAmount = current.stakedAmount.sub(amount);\\n        stakedMapIndex[pid][staker] = stakedMapIndex[pid][staker].add(1);\\n        stakedMap[pid][staker][stakedMapIndex[pid][staker]] = Checkpoint({\\n            blockNumber: blockNum,\\n            stakedAmount: newStakedAmount\\n        });\\n\\n        if (newStakedAmount == 0 && hasUserInPool[staker][pid] > 0) {\\n            uint256 pid_1 = pid; // stack to deep\\n            address userAddressInLatest = listUserInPool[pid_1][listUserInPool[pid_1].length - 1];\\n            uint256 userIndexForSender = hasUserInPool[staker][pid_1];\\n            uint256 indexUser = userIndexForSender.sub(1);\\n\\n            listUserInPool[pid_1][indexUser] = userAddressInLatest;\\n            hasUserInPool[userAddressInLatest][pid_1] = indexUser.add(1);\\n            hasUserInPool[staker][pid_1] = 0;\\n            listUserInPool[pid_1].pop();\\n        }\\n\\n        currentPool.totalStaked = currentPool.totalStaked.sub(amount);\\n        if (reward > 0) {\\n            claimedByUser[pid][staker] = claimedByUser[pid][staker].add(reward);\\n            require(\\n                IErc20Token(rewardAddress).transfer(\\n                    staker,\\n                    reward\\n                ),\\n                \\\"Get reward failed\\\"\\n            );\\n        }\\n        require(\\n            IErc20Token(currentPool.tokenStake).transfer(\\n                staker,\\n                amount\\n            ),\\n            \\\"Withdraw failed\\\"\\n        );\\n\\n        emit Withdraw(staker, amount, reward);\\n\\n    }\\n\\n    function emergencyWithdraw(uint256 pid) public pidValid(pid) {\\n        LinearPoolInfo storage currentPool = linearPoolInfo[pid];\\n        address staker = msg.sender;\\n        uint256 blockNum = block.number;\\n\\n        uint256 currentIndex = stakedMapIndex[pid][staker];\\n        Checkpoint memory current = stakedMap[pid][staker][currentIndex];\\n\\n        require(current.stakedAmount > 0, \\\"Not valid amount\\\");\\n\\n        _updateTotalClaimForLatestStakeBlock(pid, currentPool.rewardPerBlock, current, blockNum, staker);\\n\\n        stakedMapIndex[pid][staker] = stakedMapIndex[pid][staker].add(1);\\n        stakedMap[pid][staker][stakedMapIndex[pid][staker]] = Checkpoint({\\n            blockNumber: blockNum,\\n            stakedAmount: 0\\n        });\\n        currentPool.totalStaked = currentPool.totalStaked.sub(current.stakedAmount);\\n        // rewardFromEmergencyWithdraw = rewardFromEmergencyWithdraw.add(totalClaimForLatestStakeBlock[pid][staker].sub(claimedByUser[pid][staker]));\\n        claimedByUser[pid][staker] = totalClaimForLatestStakeBlock[pid][staker];\\n        if (hasUserInPool[staker][pid] > 0) {\\n            uint256 pid_1 = pid; // stack to deep\\n            address userAddressInLatest = listUserInPool[pid_1][listUserInPool[pid_1].length - 1];\\n            uint256 userIndexForSender = hasUserInPool[staker][pid_1];\\n            uint256 indexUser = userIndexForSender.sub(1);\\n\\n            listUserInPool[pid_1][indexUser] = userAddressInLatest;\\n            hasUserInPool[userAddressInLatest][pid_1] = indexUser.add(1);\\n            hasUserInPool[staker][pid_1] = 0;\\n            listUserInPool[pid_1].pop();\\n        }\\n        require(\\n            IErc20Token(currentPool.tokenStake).transfer(\\n                staker,\\n                current.stakedAmount\\n            ),\\n            \\\"Withdraw failed\\\"\\n        );\\n        emit EmergencyWithdraw(staker, current.stakedAmount);\\n    }\\n\\n    function autoCoumpound(uint256 pid) public {\\n        LinearPoolInfo memory currentPool = linearPoolInfo[pid];\\n        require(currentPool.tokenStake == rewardAddress, \\\"Pool not valid\\\");\\n        address[] memory listUser = listUserInPool[pid];\\n        uint256 totalReward;\\n        for (uint256 index = 0; index < listUser.length; index++) {\\n            address staker = listUser[index];\\n            uint256 reward = _getAmountRewardInPool(pid, staker);\\n            totalReward = totalReward.add(reward.mul(autoCompoundingFee).div(PERCENT));\\n            _stake(pid, reward.mul(PERCENT.sub(autoCompoundingFee)), staker);\\n        }\\n\\n        require(\\n            IErc20Token(currentPool.tokenStake).transfer(\\n                msg.sender,\\n                totalReward\\n            ),\\n            \\\"AutoCompounding failed\\\"\\n        );\\n\\n        emit AutoCompounding(msg.sender, totalReward);\\n\\n    }\\n\\n    /*****************\\n     * ADMIN ACTIONS *\\n     *****************/\\n\\n    function addNewStakingPool(\\n        uint256 minimumStakeAmount,\\n        uint256 rewardPerBlock,\\n        address tokenStake,\\n        uint256 minimumWithdraw\\n    ) public onlyOwner {\\n        linearPoolInfo.push(\\n            LinearPoolInfo({\\n                totalStaked: 0,\\n                minimumStakeAmount: minimumStakeAmount,\\n                rewardPerBlock: rewardPerBlock,\\n                tokenStake: tokenStake,\\n                minimumWithdraw: minimumWithdraw\\n            })\\n        );\\n\\n        emit PoolCreated(linearPoolInfo.length-1, minimumStakeAmount, rewardPerBlock, tokenStake, minimumWithdraw);\\n    }\\n\\n    function setNewRewardToken(address newToken) public onlyOwner {\\n        rewardAddress = newToken;\\n    }\\n\\n    // function claimRewardFromEmergencyWithdraw() public onlyOwner {\\n    //     uint256 amount = rewardFromEmergencyWithdraw;\\n    //     rewardFromEmergencyWithdraw = 0;\\n    //     require(\\n    //         IErc20Token(rewardAddress).transfer(\\n    //             msg.sender,\\n    //             amount\\n    //         ),\\n    //         \\\"RewardFromEmergencyWithdraw failed\\\"\\n    //     );\\n    //     emit RewardFromEmergencyWithdraw(msg.sender, amount);\\n    // }\\n\\n    function setStakingPool(\\n        uint256 pid,\\n        uint256 minimumStakeAmount,\\n        uint256 rewardPerBlock,\\n        uint256 minimumWithdraw\\n    ) public onlyOwner pidValid(pid) {\\n        LinearPoolInfo storage pool = linearPoolInfo[pid];\\n        pool.minimumStakeAmount = minimumStakeAmount;\\n        pool.rewardPerBlock = rewardPerBlock;\\n        pool.minimumWithdraw = minimumWithdraw;\\n        emit ChangeStakingPoolSetting(\\n            pid,\\n            minimumStakeAmount,\\n            rewardPerBlock,\\n            minimumWithdraw\\n        );\\n    }\\n\\n    function changeAutoCompoundingFee(uint256 _fee) public onlyOwner {\\n        uint256 oldFee = autoCompoundingFee;\\n        autoCompoundingFee = _fee;\\n        emit ChangeAutoCompoundingFee(oldFee ,_fee);\\n    }\\n\\n    /********************\\n     * VALUE ACTIONS *\\n     ********************/\\n\\n    /**\\n     * @notice Does not accept BNB.\\n     */\\n    receive () external payable {\\n        revert();\\n    }\\n\\n}\\n\",\"keccak256\":\"0x1f3b2a3b2bc6ba574ed9f3f8d8300e4bad62216d309e7e3c173ff8654fcd33fa\"},\"contracts/StakingEvent.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\n/// @title Staking Event Contract\\ncontract StakingEvent {\\n\\n    event Stake(\\n        address indexed staker,\\n        uint256 indexed amount,\\n        uint256 indexed pid\\n    );\\n\\n    event Claim(\\n        address indexed toAddress,\\n        uint256 indexed amount\\n    );\\n\\n    event Withdraw(\\n        address indexed toAddress,\\n        uint256 indexed amount,\\n        uint256 reward\\n    );\\n\\n    event EmergencyWithdraw(\\n        address indexed toAddress,\\n        uint256 indexed amount\\n    );\\n\\n    event GuardianshipTransferAuthorization(\\n        address indexed authorizedAddress\\n    );\\n\\n    event GuardianUpdate(\\n        address indexed oldValue,\\n        address indexed newValue\\n    );\\n\\n    event MinimumStakeAmountUpdate(\\n        uint256 indexed oldValue,\\n        uint256 indexed newValue\\n    );\\n\\n    event DepositRewardPool(\\n        address indexed depositor,\\n        uint256 indexed amount\\n    );\\n\\n    event WithdrawRewardPool(\\n        address indexed toAddress,\\n        uint256 indexed amount\\n    );\\n\\n    event AutoCompounding(\\n        address indexed toAddress,\\n        uint256 indexed amount\\n    );\\n\\n    event RewardFromEmergencyWithdraw(\\n        address indexed toAddress,\\n        uint256 indexed amount\\n    );\\n\\n    event PoolCreated(\\n        uint256 pid,\\n        uint256 minimumStakeAmount,\\n        uint256 rewardPerBlock,\\n        address tokenStake,\\n        uint256 minimumWithdraw\\n    );\\n\\n    event ChangeAutoCompoundingFee(\\n        uint256 oldFee,\\n        uint256 newFee\\n    );\\n\\n    event ChangeStakingPoolSetting(\\n        uint256 pid,\\n        uint256 minimumStakeAmount,\\n        uint256 rewardPerBlock,\\n        uint256 minimumWithdraw\\n    );\\n}\\n\",\"keccak256\":\"0xb1283ea20b5857d179e02e193528d74cc14edce6d98858ee89fdd125e0f0430c\"},\"contracts/StakingStorage.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\n/// @title Staking Storage Contract\\ncontract StakingStorage {\\n    uint256 public constant PERCENT = 10000;\\n    uint256 public constant REWARD_SCALE = 10**18;\\n    struct Checkpoint {\\n        uint256 blockNumber;\\n        uint256 stakedAmount;\\n    }\\n\\n    struct LinearPoolInfo {\\n        uint256 totalStaked;\\n        uint256 minimumStakeAmount;\\n        uint256 rewardPerBlock;\\n        address tokenStake;\\n        uint256 minimumWithdraw;\\n    }\\n\\n    // config\\n    address public rewardAddress;\\n    uint256 public autoCompoundingFee;\\n\\n    //state\\n    // uint256 public rewardFromEmergencyWithdraw;\\n    // pool id => address user => total reward claimed;\\n    mapping (uint256 => mapping(address => uint256)) public claimedByUser;\\n    // pool id => address user => total reward in latest checkpoint\\n    mapping (uint256 => mapping(address => uint256)) public totalClaimForLatestStakeBlock;\\n    // pool id => address user => array checkpoint for user\\n    mapping (uint256 => mapping(address => mapping (uint256 => Checkpoint))) public stakedMap;\\n    // pool id => address user => latest index checkpoint for user\\n    mapping (uint256 => mapping(address => uint256)) public stakedMapIndex;\\n    //pool id => list address user in pool.\\n    mapping (uint256 => address[]) public listUserInPool;\\n    // address user => pool id => index address user in listUserInPool;\\n    mapping (address => mapping(uint256 => uint256)) public hasUserInPool; // We using value 0 to check user has been pool. So, index address user in listUserInPool will increase 1; \\n    LinearPoolInfo[] public linearPoolInfo;\\n}\\n\",\"keccak256\":\"0x56ada3daecbc84025411dad93497ea2ba37118e3e729dd127378c9d46ea3dff3\"}},\"version\":1}",
      "storageLayout": {
        "storage": [
          {
            "astId": 2711,
            "contract": "contracts/Staking.sol:Staking",
            "label": "rewardAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2713,
            "contract": "contracts/Staking.sol:Staking",
            "label": "autoCompoundingFee",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2719,
            "contract": "contracts/Staking.sol:Staking",
            "label": "claimedByUser",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 2725,
            "contract": "contracts/Staking.sol:Staking",
            "label": "totalClaimForLatestStakeBlock",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 2734,
            "contract": "contracts/Staking.sol:Staking",
            "label": "stakedMap",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_struct(Checkpoint)2698_storage)))"
          },
          {
            "astId": 2740,
            "contract": "contracts/Staking.sol:Staking",
            "label": "stakedMapIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 2745,
            "contract": "contracts/Staking.sol:Staking",
            "label": "listUserInPool",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
          },
          {
            "astId": 2751,
            "contract": "contracts/Staking.sol:Staking",
            "label": "hasUserInPool",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
          },
          {
            "astId": 2755,
            "contract": "contracts/Staking.sol:Staking",
            "label": "linearPoolInfo",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_struct(LinearPoolInfo)2709_storage)dyn_storage"
          },
          {
            "astId": 7,
            "contract": "contracts/Staking.sol:Staking",
            "label": "_owner",
            "offset": 0,
            "slot": "9",
            "type": "t_address"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "base": "t_address",
            "encoding": "dynamic_array",
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(LinearPoolInfo)2709_storage)dyn_storage": {
            "base": "t_struct(LinearPoolInfo)2709_storage",
            "encoding": "dynamic_array",
            "label": "struct StakingStorage.LinearPoolInfo[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Checkpoint)2698_storage))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(uint256 => struct StakingStorage.Checkpoint))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_uint256,t_struct(Checkpoint)2698_storage)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_uint256,t_uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32",
            "value": "t_array(t_address)dyn_storage"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_struct(Checkpoint)2698_storage)))": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => struct StakingStorage.Checkpoint)))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Checkpoint)2698_storage))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_uint256)"
          },
          "t_mapping(t_uint256,t_struct(Checkpoint)2698_storage)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => struct StakingStorage.Checkpoint)",
            "numberOfBytes": "32",
            "value": "t_struct(Checkpoint)2698_storage"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_struct(Checkpoint)2698_storage": {
            "encoding": "inplace",
            "label": "struct StakingStorage.Checkpoint",
            "members": [
              {
                "astId": 2695,
                "contract": "contracts/Staking.sol:Staking",
                "label": "blockNumber",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
              },
              {
                "astId": 2697,
                "contract": "contracts/Staking.sol:Staking",
                "label": "stakedAmount",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LinearPoolInfo)2709_storage": {
            "encoding": "inplace",
            "label": "struct StakingStorage.LinearPoolInfo",
            "members": [
              {
                "astId": 2700,
                "contract": "contracts/Staking.sol:Staking",
                "label": "totalStaked",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
              },
              {
                "astId": 2702,
                "contract": "contracts/Staking.sol:Staking",
                "label": "minimumStakeAmount",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              },
              {
                "astId": 2704,
                "contract": "contracts/Staking.sol:Staking",
                "label": "rewardPerBlock",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 2706,
                "contract": "contracts/Staking.sol:Staking",
                "label": "tokenStake",
                "offset": 0,
                "slot": "3",
                "type": "t_address"
              },
              {
                "astId": 2708,
                "contract": "contracts/Staking.sol:Staking",
                "label": "minimumWithdraw",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimReward(uint256)": {
            "notice": "Claims reward"
          },
          "withdraw(uint256,uint256)": {
            "notice": "Withdraws the provided amount of staked"
          }
        },
        "version": 1
      },
      "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"contracts/FakeToken.sol\": {\n      \"content\": \"pragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract FakeToken is ERC20 {\\n    constructor(uint256 initialSupply) ERC20(\\\"Chain\\\", \\\"CHN\\\") {\\n        // _mint(msg.sender, initialSupply);\\n    }\\n\\n    function mintForUser(uint256 amount) public {\\n        _mint(msg.sender, amount);\\n    }\\n}\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/ERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Context.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\n    },\n    \"contracts/mocks/ERC20Mock.sol\": {\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract ERC20Mock is ERC20 {\\n    constructor(\\n        string memory name,\\n        string memory symbol,\\n        uint256 supply\\n    ) ERC20(name, symbol) {\\n        _mint(msg.sender, supply);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\n    },\n    \"contracts/Staking.sol\": {\n      \"content\": \"pragma solidity ^0.8.0;\\n\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./IErc20Token.sol\\\";\\nimport \\\"./StakingStorage.sol\\\";\\nimport \\\"./StakingEvent.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/// @title Staking Contract\\ncontract Staking is StakingStorage, StakingEvent, Ownable {\\n    using SafeMath for uint256;\\n\\n    constructor(address chn, uint256 _autoCompoundingFee) Ownable() {\\n        rewardAddress = chn;\\n        autoCompoundingFee = _autoCompoundingFee;\\n    }\\n\\n    /********************\\n     * MODIFIER *\\n     ********************/\\n\\n    modifier pidValid(uint256 pid) {\\n        require(linearPoolInfo.length > pid && pid >= 0, \\\"pid not valid\\\");\\n        _;\\n    }\\n\\n    /********************\\n     * STANDARD ACTIONS *\\n     ********************/\\n\\n    function getPoolInfoFromId(uint pid) public view pidValid(pid) returns (LinearPoolInfo memory) {\\n        return linearPoolInfo[pid];\\n    }\\n\\n    function getStakedAmount(uint256 pid, address staker) public view pidValid(pid) returns (uint256) {\\n        uint256 currentIndex = stakedMapIndex[pid][staker];\\n        Checkpoint memory current = stakedMap[pid][staker][currentIndex];\\n        return current.stakedAmount;\\n    }\\n\\n    function getPriorStakedAmount(uint256 pid, address staker, uint256 blockNumber) external view pidValid(pid) returns (uint256) {\\n        if (blockNumber == 0) {\\n            return getStakedAmount(pid, staker);\\n        }\\n\\n        uint256 currentIndex = stakedMapIndex[pid][staker];\\n        Checkpoint memory current = stakedMap[pid][staker][currentIndex];\\n\\n        for (uint i = current.blockNumber; i > 0; i--) {\\n            Checkpoint memory checkpoint = stakedMap[pid][staker][i];\\n            if (checkpoint.blockNumber <= blockNumber) {\\n                return checkpoint.stakedAmount;\\n            }\\n        }\\n        return 0;\\n    }\\n\\n\\n    function getAmountRewardInPool(uint256 pid, address staker) public view pidValid(pid) returns (uint256) {\\n        return _getAmountRewardInPool(pid, staker);\\n    }\\n\\n    function getCoumpoundingReward(uint256 pid) public view pidValid(pid) returns (uint256) {\\n        LinearPoolInfo memory currentPool = linearPoolInfo[pid];\\n        require(currentPool.tokenStake == rewardAddress, \\\"Pool not valid\\\");\\n        address[] memory listUser = listUserInPool[pid];\\n        uint256 totalReward;\\n        for (uint256 index = 0; index < listUser.length; index++) {\\n            address staker = listUser[index];\\n            uint256 reward = _getAmountRewardInPool(pid, staker);\\n            totalReward = totalReward.add(reward.mul(autoCompoundingFee).div(PERCENT));\\n        }\\n        return totalReward;\\n    }\\n\\n    function calculateReward(uint256 rewardPerBlock, uint256 diffBlock, uint256 stakeAmount) public pure returns (uint256) {\\n        return rewardPerBlock.mul(diffBlock).mul(stakeAmount).div(REWARD_SCALE);\\n    }\\n\\n    function _getAmountRewardInPool(uint256 pid, address staker) private view returns (uint256) {\\n        LinearPoolInfo memory currentPool = linearPoolInfo[pid];\\n        uint256 currentIndex = stakedMapIndex[pid][staker];\\n        Checkpoint memory current = stakedMap[pid][staker][currentIndex];\\n        uint256 currentBlock = block.number;\\n        uint256 diffBlock = currentBlock.sub(current.blockNumber);\\n        uint256 reward = calculateReward(currentPool.rewardPerBlock, diffBlock, current.stakedAmount);\\n        return totalClaimForLatestStakeBlock[pid][staker].add(reward).sub(claimedByUser[pid][staker]);\\n    }\\n\\n    function getAllAmountReward(address staker) public view returns (uint256) {\\n        uint256 totalAmount;\\n        for (uint i = 0; i < linearPoolInfo.length; i++) {\\n            uint256 pendingRewardInPool = _getAmountRewardInPool(i, staker);\\n            totalAmount = totalAmount.add(pendingRewardInPool);\\n        }\\n        return totalAmount;\\n    }\\n\\n    function getBlockNumber() public view returns (uint256) {\\n        return block.number;\\n    }\\n\\n    function _updateTotalClaimForLatestStakeBlock(uint256 pid, uint256 rewardPerBlock, Checkpoint memory checkpoint, uint256 blockNumber, address staker) private {\\n        uint256 diffBlock = blockNumber.sub(checkpoint.blockNumber);\\n        uint256 claimAmount = calculateReward(rewardPerBlock, diffBlock, checkpoint.stakedAmount);\\n        totalClaimForLatestStakeBlock[pid][staker] = totalClaimForLatestStakeBlock[pid][staker].add(claimAmount);\\n    }\\n\\n    function stake(uint256 pid, uint256 amount) public pidValid(pid) {\\n        LinearPoolInfo memory currentPool = linearPoolInfo[pid];\\n        require(amount >= currentPool.minimumStakeAmount, \\\"Too small amount\\\");\\n        _stake(pid, amount, msg.sender);\\n        if (hasUserInPool[msg.sender][pid] == 0) {\\n            listUserInPool[pid].push(msg.sender);\\n            hasUserInPool[msg.sender][pid] = listUserInPool[pid].length;\\n        }\\n\\n        require(\\n            IErc20Token(currentPool.tokenStake).transferFrom(\\n                msg.sender,\\n                address(this),\\n                amount\\n            ),\\n            \\\"Stake failed\\\"\\n        );\\n\\n        emit Stake(\\n            msg.sender,\\n            amount,\\n            pid\\n        );\\n    }\\n\\n    function _stake(uint256 pid, uint256 amount, address staker) private {\\n        LinearPoolInfo storage currentPool = linearPoolInfo[pid];\\n        uint256 blockNum = block.number;\\n        uint256 currentIndex = stakedMapIndex[pid][staker];\\n        Checkpoint storage current = stakedMap[pid][staker][currentIndex];\\n\\n        _updateTotalClaimForLatestStakeBlock(pid, currentPool.rewardPerBlock, current, blockNum, staker);\\n\\n        uint256 newStakedAmount = current.stakedAmount.add(amount);\\n        stakedMapIndex[pid][staker] = stakedMapIndex[pid][staker].add(1);\\n        stakedMap[pid][staker][stakedMapIndex[pid][staker]] = Checkpoint({\\n            blockNumber: blockNum,\\n            stakedAmount: newStakedAmount\\n        });\\n        currentPool.totalStaked = currentPool.totalStaked.add(amount);\\n    }\\n\\n    /**\\n     * @notice Claims reward\\n     *\\n     */\\n    function claimReward(uint256 pid) public pidValid(pid) {\\n        _claim(pid, msg.sender);\\n    }\\n\\n    function claimAllReward() public {\\n        address staker = msg.sender;\\n        uint256 totalClaim;\\n        for (uint i = 0; i < linearPoolInfo.length; i++) {\\n            uint256 amount = _getAmountRewardInPool(i, staker);\\n            claimedByUser[i][staker] = claimedByUser[i][staker].add(amount);\\n            totalClaim = totalClaim.add(amount);\\n        }\\n\\n        require(\\n            IErc20Token(rewardAddress).transfer(\\n                staker,\\n                totalClaim\\n            ),\\n            \\\"Claim failed\\\"\\n        );\\n\\n        emit Claim(staker, totalClaim);\\n    }\\n\\n    function _claim(uint256 pid, address staker) private {\\n        uint256 amount = _getAmountRewardInPool(pid, staker);\\n        claimedByUser[pid][staker] = claimedByUser[pid][staker].add(amount);\\n        require(\\n            IErc20Token(rewardAddress).transfer(\\n                staker,\\n                amount\\n            ),\\n            \\\"Claim failed\\\"\\n        );\\n        emit Claim(staker, amount);\\n    }\\n\\n    /**\\n     * @notice Withdraws the provided amount of staked\\n     *\\n     * @param amount The amount to withdraw\\n    */\\n    function withdraw(uint256 pid, uint256 amount) public pidValid(pid) {\\n        LinearPoolInfo storage currentPool = linearPoolInfo[pid];\\n        uint256 blockNum = block.number;\\n        address staker = msg.sender;\\n        require(amount >= currentPool.minimumWithdraw, \\\"Too small amount\\\");\\n\\n        uint256 currentIndex = stakedMapIndex[pid][staker];\\n        Checkpoint memory current = stakedMap[pid][staker][currentIndex];\\n        require(amount <= current.stakedAmount && amount > 0, \\\"Invalid amount\\\");\\n\\n        uint256 reward = _getAmountRewardInPool(pid, staker);\\n        _updateTotalClaimForLatestStakeBlock(pid, currentPool.rewardPerBlock, current, blockNum, staker);\\n\\n        uint256 newStakedAmount = current.stakedAmount.sub(amount);\\n        stakedMapIndex[pid][staker] = stakedMapIndex[pid][staker].add(1);\\n        stakedMap[pid][staker][stakedMapIndex[pid][staker]] = Checkpoint({\\n            blockNumber: blockNum,\\n            stakedAmount: newStakedAmount\\n        });\\n\\n        if (newStakedAmount == 0 && hasUserInPool[staker][pid] > 0) {\\n            uint256 pid_1 = pid; // stack to deep\\n            address userAddressInLatest = listUserInPool[pid_1][listUserInPool[pid_1].length - 1];\\n            uint256 userIndexForSender = hasUserInPool[staker][pid_1];\\n            uint256 indexUser = userIndexForSender.sub(1);\\n\\n            listUserInPool[pid_1][indexUser] = userAddressInLatest;\\n            hasUserInPool[userAddressInLatest][pid_1] = indexUser.add(1);\\n            hasUserInPool[staker][pid_1] = 0;\\n            listUserInPool[pid_1].pop();\\n        }\\n\\n        currentPool.totalStaked = currentPool.totalStaked.sub(amount);\\n        if (reward > 0) {\\n            claimedByUser[pid][staker] = claimedByUser[pid][staker].add(reward);\\n            require(\\n                IErc20Token(rewardAddress).transfer(\\n                    staker,\\n                    reward\\n                ),\\n                \\\"Get reward failed\\\"\\n            );\\n        }\\n        require(\\n            IErc20Token(currentPool.tokenStake).transfer(\\n                staker,\\n                amount\\n            ),\\n            \\\"Withdraw failed\\\"\\n        );\\n\\n        emit Withdraw(staker, amount, reward);\\n\\n    }\\n\\n    function emergencyWithdraw(uint256 pid) public pidValid(pid) {\\n        LinearPoolInfo storage currentPool = linearPoolInfo[pid];\\n        address staker = msg.sender;\\n        uint256 blockNum = block.number;\\n\\n        uint256 currentIndex = stakedMapIndex[pid][staker];\\n        Checkpoint memory current = stakedMap[pid][staker][currentIndex];\\n\\n        require(current.stakedAmount > 0, \\\"Not valid amount\\\");\\n\\n        _updateTotalClaimForLatestStakeBlock(pid, currentPool.rewardPerBlock, current, blockNum, staker);\\n\\n        stakedMapIndex[pid][staker] = stakedMapIndex[pid][staker].add(1);\\n        stakedMap[pid][staker][stakedMapIndex[pid][staker]] = Checkpoint({\\n            blockNumber: blockNum,\\n            stakedAmount: 0\\n        });\\n        currentPool.totalStaked = currentPool.totalStaked.sub(current.stakedAmount);\\n        // rewardFromEmergencyWithdraw = rewardFromEmergencyWithdraw.add(totalClaimForLatestStakeBlock[pid][staker].sub(claimedByUser[pid][staker]));\\n        claimedByUser[pid][staker] = totalClaimForLatestStakeBlock[pid][staker];\\n        if (hasUserInPool[staker][pid] > 0) {\\n            uint256 pid_1 = pid; // stack to deep\\n            address userAddressInLatest = listUserInPool[pid_1][listUserInPool[pid_1].length - 1];\\n            uint256 userIndexForSender = hasUserInPool[staker][pid_1];\\n            uint256 indexUser = userIndexForSender.sub(1);\\n\\n            listUserInPool[pid_1][indexUser] = userAddressInLatest;\\n            hasUserInPool[userAddressInLatest][pid_1] = indexUser.add(1);\\n            hasUserInPool[staker][pid_1] = 0;\\n            listUserInPool[pid_1].pop();\\n        }\\n        require(\\n            IErc20Token(currentPool.tokenStake).transfer(\\n                staker,\\n                current.stakedAmount\\n            ),\\n            \\\"Withdraw failed\\\"\\n        );\\n        emit EmergencyWithdraw(staker, current.stakedAmount);\\n    }\\n\\n    function autoCoumpound(uint256 pid) public {\\n        LinearPoolInfo memory currentPool = linearPoolInfo[pid];\\n        require(currentPool.tokenStake == rewardAddress, \\\"Pool not valid\\\");\\n        address[] memory listUser = listUserInPool[pid];\\n        uint256 totalReward;\\n        for (uint256 index = 0; index < listUser.length; index++) {\\n            address staker = listUser[index];\\n            uint256 reward = _getAmountRewardInPool(pid, staker);\\n            totalReward = totalReward.add(reward.mul(autoCompoundingFee).div(PERCENT));\\n            _stake(pid, reward.mul(PERCENT.sub(autoCompoundingFee)), staker);\\n        }\\n\\n        require(\\n            IErc20Token(currentPool.tokenStake).transfer(\\n                msg.sender,\\n                totalReward\\n            ),\\n            \\\"AutoCompounding failed\\\"\\n        );\\n\\n        emit AutoCompounding(msg.sender, totalReward);\\n\\n    }\\n\\n    /*****************\\n     * ADMIN ACTIONS *\\n     *****************/\\n\\n    function addNewStakingPool(\\n        uint256 minimumStakeAmount,\\n        uint256 rewardPerBlock,\\n        address tokenStake,\\n        uint256 minimumWithdraw\\n    ) public onlyOwner {\\n        linearPoolInfo.push(\\n            LinearPoolInfo({\\n                totalStaked: 0,\\n                minimumStakeAmount: minimumStakeAmount,\\n                rewardPerBlock: rewardPerBlock,\\n                tokenStake: tokenStake,\\n                minimumWithdraw: minimumWithdraw\\n            })\\n        );\\n\\n        emit PoolCreated(linearPoolInfo.length-1, minimumStakeAmount, rewardPerBlock, tokenStake, minimumWithdraw);\\n    }\\n\\n    function setNewRewardToken(address newToken) public onlyOwner {\\n        rewardAddress = newToken;\\n    }\\n\\n    // function claimRewardFromEmergencyWithdraw() public onlyOwner {\\n    //     uint256 amount = rewardFromEmergencyWithdraw;\\n    //     rewardFromEmergencyWithdraw = 0;\\n    //     require(\\n    //         IErc20Token(rewardAddress).transfer(\\n    //             msg.sender,\\n    //             amount\\n    //         ),\\n    //         \\\"RewardFromEmergencyWithdraw failed\\\"\\n    //     );\\n    //     emit RewardFromEmergencyWithdraw(msg.sender, amount);\\n    // }\\n\\n    function setStakingPool(\\n        uint256 pid,\\n        uint256 minimumStakeAmount,\\n        uint256 rewardPerBlock,\\n        uint256 minimumWithdraw\\n    ) public onlyOwner pidValid(pid) {\\n        LinearPoolInfo storage pool = linearPoolInfo[pid];\\n        pool.minimumStakeAmount = minimumStakeAmount;\\n        pool.rewardPerBlock = rewardPerBlock;\\n        pool.minimumWithdraw = minimumWithdraw;\\n        emit ChangeStakingPoolSetting(\\n            pid,\\n            minimumStakeAmount,\\n            rewardPerBlock,\\n            minimumWithdraw\\n        );\\n    }\\n\\n    function changeAutoCompoundingFee(uint256 _fee) public onlyOwner {\\n        uint256 oldFee = autoCompoundingFee;\\n        autoCompoundingFee = _fee;\\n        emit ChangeAutoCompoundingFee(oldFee ,_fee);\\n    }\\n\\n    /********************\\n     * VALUE ACTIONS *\\n     ********************/\\n\\n    /**\\n     * @notice Does not accept BNB.\\n     */\\n    receive () external payable {\\n        revert();\\n    }\\n\\n}\\n\"\n    },\n    \"contracts/SafeMath.sol\": {\n      \"content\": \"pragma solidity ^0.8.0;\\n\\n// From https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/Math.sol\\n// Subject to the MIT license.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting with custom message on overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, errorMessage);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on underflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot underflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction underflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on underflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot underflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, errorMessage);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers.\\n     * Reverts on division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers.\\n     * Reverts with custom message on division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\"\n    },\n    \"contracts/IErc20Token.sol\": {\n      \"content\": \"pragma solidity ^0.8.0;\\n\\ninterface IErc20Token {\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n}\\n\"\n    },\n    \"contracts/StakingStorage.sol\": {\n      \"content\": \"pragma solidity ^0.8.0;\\n\\n/// @title Staking Storage Contract\\ncontract StakingStorage {\\n    uint256 public constant PERCENT = 10000;\\n    uint256 public constant REWARD_SCALE = 10**18;\\n    struct Checkpoint {\\n        uint256 blockNumber;\\n        uint256 stakedAmount;\\n    }\\n\\n    struct LinearPoolInfo {\\n        uint256 totalStaked;\\n        uint256 minimumStakeAmount;\\n        uint256 rewardPerBlock;\\n        address tokenStake;\\n        uint256 minimumWithdraw;\\n    }\\n\\n    // config\\n    address public rewardAddress;\\n    uint256 public autoCompoundingFee;\\n\\n    //state\\n    // uint256 public rewardFromEmergencyWithdraw;\\n    // pool id => address user => total reward claimed;\\n    mapping (uint256 => mapping(address => uint256)) public claimedByUser;\\n    // pool id => address user => total reward in latest checkpoint\\n    mapping (uint256 => mapping(address => uint256)) public totalClaimForLatestStakeBlock;\\n    // pool id => address user => array checkpoint for user\\n    mapping (uint256 => mapping(address => mapping (uint256 => Checkpoint))) public stakedMap;\\n    // pool id => address user => latest index checkpoint for user\\n    mapping (uint256 => mapping(address => uint256)) public stakedMapIndex;\\n    //pool id => list address user in pool.\\n    mapping (uint256 => address[]) public listUserInPool;\\n    // address user => pool id => index address user in listUserInPool;\\n    mapping (address => mapping(uint256 => uint256)) public hasUserInPool; // We using value 0 to check user has been pool. So, index address user in listUserInPool will increase 1; \\n    LinearPoolInfo[] public linearPoolInfo;\\n}\\n\"\n    },\n    \"contracts/StakingEvent.sol\": {\n      \"content\": \"pragma solidity ^0.8.0;\\n\\n/// @title Staking Event Contract\\ncontract StakingEvent {\\n\\n    event Stake(\\n        address indexed staker,\\n        uint256 indexed amount,\\n        uint256 indexed pid\\n    );\\n\\n    event Claim(\\n        address indexed toAddress,\\n        uint256 indexed amount\\n    );\\n\\n    event Withdraw(\\n        address indexed toAddress,\\n        uint256 indexed amount,\\n        uint256 reward\\n    );\\n\\n    event EmergencyWithdraw(\\n        address indexed toAddress,\\n        uint256 indexed amount\\n    );\\n\\n    event GuardianshipTransferAuthorization(\\n        address indexed authorizedAddress\\n    );\\n\\n    event GuardianUpdate(\\n        address indexed oldValue,\\n        address indexed newValue\\n    );\\n\\n    event MinimumStakeAmountUpdate(\\n        uint256 indexed oldValue,\\n        uint256 indexed newValue\\n    );\\n\\n    event DepositRewardPool(\\n        address indexed depositor,\\n        uint256 indexed amount\\n    );\\n\\n    event WithdrawRewardPool(\\n        address indexed toAddress,\\n        uint256 indexed amount\\n    );\\n\\n    event AutoCompounding(\\n        address indexed toAddress,\\n        uint256 indexed amount\\n    );\\n\\n    event RewardFromEmergencyWithdraw(\\n        address indexed toAddress,\\n        uint256 indexed amount\\n    );\\n\\n    event PoolCreated(\\n        uint256 pid,\\n        uint256 minimumStakeAmount,\\n        uint256 rewardPerBlock,\\n        address tokenStake,\\n        uint256 minimumWithdraw\\n    );\\n\\n    event ChangeAutoCompoundingFee(\\n        uint256 oldFee,\\n        uint256 newFee\\n    );\\n\\n    event ChangeStakingPoolSetting(\\n        uint256 pid,\\n        uint256 minimumStakeAmount,\\n        uint256 rewardPerBlock,\\n        uint256 minimumWithdraw\\n    );\\n}\\n\"\n    },\n    \"contracts/StakingTest.sol\": {\n      \"content\": \"pragma solidity ^0.8.0;\\nimport \\\"./Staking.sol\\\";\\n\\ncontract StakingTest is Staking {\\n    constructor(address chn, uint256 _autoCompoundingFee) Staking(chn, _autoCompoundingFee) {\\n    }\\n    function setRewardFromEmergencyWithdraw(uint256 newValue) public {\\n        // rewardFromEmergencyWithdraw = newValue;\\n    }\\n\\n}\"\n    }\n  },\n  \"settings\": {\n    \"evmVersion\": \"istanbul\",\n    \"optimizer\": {\n      \"enabled\": true,\n      \"runs\": 1000000,\n      \"details\": {\n        \"yul\": true,\n        \"deduplicate\": true,\n        \"cse\": true,\n        \"constantOptimizer\": true\n      }\n    },\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"devdoc\",\n          \"userdoc\",\n          \"storageLayout\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    }\n  }\n}",
      "solcInputHash": "c1ca74577686f87feceb05c454ac4c81",
      "transactionHash": "0xfe4f42337e2401e210262e6913983e796c7b62b0e0465ef0fdd83dd79caeb71e",
      "args": [
        "0x47974400432ADbCCAC6BdedAE73DDAaaFA91A5ec",
        "1000"
      ]
    },
    "decoded": {
      "from": "0xD51bD125DEEe0d3CB12cf333B8910Ead844b5615",
      "gasPrice": "1200056704",
      "gasLimit": "3269704",
      "to": null,
      "value": "0",
      "nonce": 125,
      "data": "",
      "r": "0x506ca7fe462f9a815a72586e1cdfadf10f3e08e43896841c96f7c7a803556eab",
      "s": "0x282b21b42cd19331497c67397fa9b8ba561246057a6d9e6fbd67081ea94a58c0",
      "v": 1,
      "chainId": 4
    }
  }
}